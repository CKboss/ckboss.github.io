<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[码代码的猿猿]]></title>
  <subtitle><![CDATA[码代码的猿猿的ac之路]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.ckboss.cf/"/>
  <updated>2016-11-17T11:35:21.478Z</updated>
  <id>http://www.ckboss.cf/</id>
  
  <author>
    <name><![CDATA[CKboss]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[docker初体验]]></title>
    <link href="http://www.ckboss.cf/2016/11/17/docker%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://www.ckboss.cf/2016/11/17/docker初体验/</id>
    <published>2016-11-17T11:29:54.000Z</published>
    <updated>2016-11-17T11:35:21.478Z</updated>
    <content type="html"><![CDATA[<p>记录几条docker的命令:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">拉取镜像:</span><br><span class="line"> docker pull ubtuntu</span><br><span class="line">运行:</span><br><span class="line"> docker run -it --rm <span class="string">ubuntu:</span><span class="number">16.04</span> bash</span><br><span class="line">镜像列表:</span><br><span class="line"> docker images</span><br><span class="line">提交:</span><br><span class="line"> docker commit -m=<span class="string">"update"</span> -a=<span class="string">"ckboss"</span> <span class="number">5e5</span>e39bbaca0 ckboss/<span class="string">ubuntu:</span>v0</span><br><span class="line">挂载本地位置(本地地址:docker地址):</span><br><span class="line"> docker -v <span class="regexp">/home/</span>ckboss<span class="regexp">/vmware/</span>SharedData<span class="regexp">/ubuntu1604/</span>:<span class="regexp">/home/</span>ckboss run -ti ckboss/<span class="string">ubuntu:</span>v0 bash</span><br><span class="line">端口映射(docker中的<span class="number">22</span>端口到本地的<span class="number">10022</span>):</span><br><span class="line"> docker run -ti -p <span class="number">10022</span>:<span class="number">22</span> ckboss/<span class="string">ubuntu:</span>v0 bash</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>记录几条docker的命令:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">]]>
    </summary>
    
      <category term="docker" scheme="http://www.ckboss.cf/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Tensorflow初体验]]></title>
    <link href="http://www.ckboss.cf/2016/11/05/Tensorflow%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://www.ckboss.cf/2016/11/05/Tensorflow初体验/</id>
    <published>2016-11-05T07:58:05.000Z</published>
    <updated>2016-11-05T08:43:48.399Z</updated>
    <content type="html"><![CDATA[<h3 id="安装:">安装:</h3><p>个人感觉Tensoflow是最容易安装的.</p>
<blockquote>
<p> tensorflow0.11_rc1已经可以支持cuda8.在ubuntu16.04下安装更加方便</p>
</blockquote>
<p>介绍一下在Ubuntu16.04下安装带有GPU的tensorflow:</p>
<p>安装总共需要4个文件:</p>
<p>CUDA8.0: 这个可以在官网上下到,并且包含了Nvidia显卡的驱动,也就是说并不需要先安装显卡驱动</p>
<ul>
<li>cuda-repo-ubuntu1604-8-0-local_8.0.44-1_amd64.deb<br>cudnn5.1: 这个需要先注册一下再从官网上下载</li>
<li>cudnn-8.0-linux-x64-v5.1.tgz<br>anacoda: Pychon全家桶</li>
<li>Anaconda3-4.2.0-Linux-x86_64.sh<br>tensoflow的安装包,因为谷歌被墙最好先翻墙下好.</li>
<li>tensorflow-0.11.0rc1-cp35-cp35m-linux_x86_64.whl</li>
</ul>
<p>安装步骤:</p>
<ol>
<li>先安装cuda,这个参照官网的安装教程就可以了<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">Installation Instructions:</span></span><br><span class="line"><span class="escape">`s</span>udo dpkg -i cuda-repo-ubuntu1604_8.<span class="number">0.44</span>-<span class="number">1</span>_amd64.deb<span class="escape">`</span><br><span class="line"></span><span class="escape">`s</span>udo apt-get update<span class="escape">`</span><br><span class="line"></span><span class="escape">`s</span>udo apt-get install cuda`</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>默认会安装在/usr/local/cuda下面,同时也会安装上显卡的驱动.<br>安装显卡驱动的过程可能有些折腾…<br>能看到这个界面就对了:<br><img src="http://ww1.sinaimg.cn/mw1024/50a04a61jw1f9haxz3wspj20k80i5jw2.jpg" alt=""><br>如果没有,慢慢折腾驱动吧…</p>
<ol>
<li>安装cudnn<br>下载后解压,有一个lib64和include的文件. 把这两个文件夹里的内容复制到cuda中对应的位置.<br>注意cp的时候用带上-p选项,复制完以后ldconfig一下.</li>
<li>安装anacoda<br>没啥好说的运行下那个.sh文件就可以了,完成后系统的默认python就被换掉了.</li>
<li>安装tensorflow<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">pip</span> <span class="tag">install</span> <span class="tag">tensorflow-0</span><span class="class">.11</span><span class="class">.0rc1-cp35-cp35m-linux_x86_64</span><span class="class">.whl</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>至此tensorflow应该就安装好了,如果不想折腾gpu可以安装cpu版的tensorflow略去1,2步,直接安装anacoda,pip安装对应cpu版本的tensorflow就可了(很慢…)<br>更多见:<br><a href="https://www.tensorflow.org/versions/r0.11/get_started/index.html" target="_blank" rel="external">https://www.tensorflow.org/versions/r0.11/get_started/index.html</a></p>
<h3 id="文件读取:">文件读取:</h3><p>有三种输入办法</p>
<ol>
<li>feed_dict给placehold变量赋值</li>
<li>直接初始化为Various</li>
<li>使用Tfrecord格式的文件</li>
</ol>
<p>这一块官网上说的不是很清楚,第一种办法很方便但是有一个严重的问题就是,placehold的变量的维数是不固定的,没法在程序中判断dims,即使用get_shape()也不可以.</p>
<p>TFRecord算最好用的读入办法了,下面给一个批量读入的示例:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IM = np.arange(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">imgs = [ IM <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>)]</span><br><span class="line">labels = [ i%<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># read and write test</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFloatList</span><span class="params">(value,isArray = False)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> isArray==<span class="keyword">False</span> : value = [value]</span><br><span class="line">    <span class="keyword">return</span> tf.train.Feature(float_list=tf.train.FloatList(value=value))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getInt64List</span><span class="params">(value,isArray = False)</span> :</span></span><br><span class="line">    <span class="keyword">if</span> isArray==<span class="keyword">False</span> : value = [value]</span><br><span class="line">    <span class="keyword">return</span> tf.train.Feature(int64_list=tf.train.Int64List(value=value))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">filename = <span class="string">'/tmp/t1.TRF'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">WriteToTFR</span><span class="params">(filename)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> tf.python_io.TFRecordWriter(filename) <span class="keyword">as</span> writer :</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">            img = imgs[i]</span><br><span class="line">            label = labels[i]</span><br><span class="line">            imgr = img.tolist()</span><br><span class="line">            example = tf.train.Example(features = tf.train.Features(feature =</span><br><span class="line">                                                                    &#123;<span class="string">'img'</span>:getFloatList(imgr,<span class="keyword">True</span>),</span><br><span class="line">                                                                     <span class="string">'label'</span>:getInt64List(label)&#125;))</span><br><span class="line">            writer.write(example.SerializeToString())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ExploreTRF</span><span class="params">(filename)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> serilize_example <span class="keyword">in</span> tf.python_io.tf_record_iterator(filename) :</span><br><span class="line"></span><br><span class="line">        example = tf.train.Example()</span><br><span class="line">        example.ParseFromString(serilize_example)</span><br><span class="line"></span><br><span class="line">        print(example)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_and_decode</span><span class="params">(filename)</span>:</span></span><br><span class="line"></span><br><span class="line">    filename_queue = tf.train.string_input_producer([filename])</span><br><span class="line"></span><br><span class="line">    reader = tf.TFRecordReader()</span><br><span class="line">    _,serialize_example  = reader.read(filename_queue)</span><br><span class="line">    features = tf.parse_single_example(serialized= serialize_example,</span><br><span class="line">                                       features= &#123;</span><br><span class="line">                                           <span class="string">'img'</span>:tf.FixedLenFeature([<span class="number">16</span>],tf.float32),</span><br><span class="line">                                           <span class="string">'label'</span>:tf.FixedLenFeature([],tf.int64) &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> features[<span class="string">'img'</span>],features[<span class="string">'label'</span>]</span><br><span class="line">    <span class="comment">#return '_',features['label']</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RandomBatch</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    img,label = read_and_decode(filename)</span><br><span class="line">    img_batch,label_batch = tf.train.shuffle_batch([img,label],batch_size=<span class="number">5</span>,capacity=<span class="number">20</span>,min_after_dequeue=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    init = tf.initialize_all_variables()</span><br><span class="line"></span><br><span class="line">    sess = tf.Session()</span><br><span class="line">    sess.run(init)</span><br><span class="line"></span><br><span class="line">	<span class="comment"># 一定要有这句才能运行</span></span><br><span class="line">    threads = tf.train.start_queue_runners(sess=sess)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        a,b = sess.run([img_batch,label_batch])</span><br><span class="line">        print(a,<span class="string">'&lt;--&gt;'</span>,b)</span><br><span class="line"></span><br><span class="line">    sess.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#WriteToTFR(filename=filename)</span></span><br><span class="line">    <span class="comment">#ExploreTRF(filename)</span></span><br><span class="line">    a,b = read_and_decode(filename)</span><br><span class="line">    print(a,b)</span><br><span class="line">    RandomBatch()</span><br></pre></td></tr></table></figure>
<h3 id="变量的读取和保存">变量的读取和保存</h3><p>在训练中可以把sess中的变量保存下来<br>保存:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">saver = tf.train.Saver(tf.all_variables())</span><br><span class="line">checkpoint = <span class="string">'/tmp/acc_&#123;:.2f&#125;_backup.ckpt'</span>.format(ta)</span><br><span class="line">saver.save(sess,checkpoint)</span><br></pre></td></tr></table></figure></p>
<p>读取,用resore来代替tf.initialize_all_variables()就可以了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">saver = tf.train.Saver(tf.all_variables())</span><br><span class="line">saver.restore(sess, savepath)</span><br></pre></td></tr></table></figure></p>
<h3 id="未完待续…">未完待续…</h3>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="安装:">安装:</h3><p>个人感觉Tensoflow是最容易安装的.</p>
<blockquote>
<p> tensorflow0.11_rc1已经可以支持cuda8.在ubuntu16.04下安装更加方便</p>
</blockquote>
<p>介绍]]>
    </summary>
    
      <category term="Tensorflow" scheme="http://www.ckboss.cf/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[NVIDIA TITAN X]]></title>
    <link href="http://www.ckboss.cf/2016/11/05/NVIDIA-TITAN-X/"/>
    <id>http://www.ckboss.cf/2016/11/05/NVIDIA-TITAN-X/</id>
    <published>2016-11-05T06:23:00.000Z</published>
    <updated>2016-11-05T06:24:59.730Z</updated>
    <content type="html"><![CDATA[<p>12G 显存刚好够用..</p>
<p><img src="http://ww3.sinaimg.cn/mw1024/50a04a61jw1f9h6dkpsf2j20sj0l5dm6.jpg" alt="NVIDIA TITAN X"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>12G 显存刚好够用..</p>
<p><img src="http://ww3.sinaimg.cn/mw1024/50a04a61jw1f9h6dkpsf2j20sj0l5dm6.jpg" alt="NVIDIA TITAN X"></p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDOJ 5858 Hard problem 积分]]></title>
    <link href="http://www.ckboss.cf/2016/08/21/HDOJ5858/"/>
    <id>http://www.ckboss.cf/2016/08/21/HDOJ5858/</id>
    <published>2016-08-21T13:33:03.000Z</published>
    <updated>2016-08-21T13:52:28.000Z</updated>
    <content type="html"><![CDATA[<p>博客恢复更新了,顺便看了下今年多校的题目…</p>
<h1 id="Hard_problem"><a href="http://acm.split.hdu.edu.cn/showproblem.php?pid=5858" target="_blank" rel="external">Hard problem</a></h1><h4 id="Problem_Description">Problem Description</h4><p>cjj is fun with math problem. One day he found a Olympic Mathematics problem for primary school students. It is too difficult for cjj. Can you solve it?</p>
<p><img src="http://acm.split.hdu.edu.cn/data/images/C713-1002-1.jpg" alt=""></p>
<p>Give you the side length of the square L, you need to calculate the shaded area in the picture.</p>
<p>The full circle is the inscribed circle of the square, and the center of two quarter circle is the vertex of square, and its radius is the length of the square.</p>
<h4 id="Input">Input</h4><p>The first line contains a integer T(1&lt;=T&lt;=10000), means the number of the test case. Each case contains one line with integer l(1&lt;=l&lt;=10000).</p>
<h4 id="Output">Output</h4><p>For each test case, print one line, the shade area in the picture. The answer is round to two digit.</p>
<h4 id="Sample_Input">Sample Input</h4><p>1<br>1</p>
<h4 id="Sample_Output">Sample Output</h4><p>0.29</p>
<h4 id="Author">Author</h4><p>BUPT</p>
<h4 id="Source">Source</h4><p>2016 Multi-University Training Contest 10</p>
<p>如何计算阴影部分的面积还是很显然的.把原图分成两半,只看一边的话,先计算出小圆和大圆的交点,然后用积分分两段算出交点下方的面积就可以了.<br>主要是半圆的定积分的计算比较麻烦,求出的式子比较长…</p>
<p>$\frac{x \left(L^2-3 L x+2 L \sqrt{x (L-x)}+2 x^2\right)-L^2 \sqrt{x} \sqrt{L-x} \tan ^{-1}\left(\frac{\sqrt{x}}{\sqrt{L-x}}\right)}{4 \sqrt{x (L-x)}}$</p>
<p>$\frac{2 L^2 \sqrt{x} \sqrt{2 L-x} \tan ^{-1}\left(\frac{\sqrt{x}}{\sqrt{2 L-x}}\right)-x \left(2 L^2-3 L x+x^2\right)}{2 \sqrt{x (2 L-x)}}$</p>
<a id="more"></a>
<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
#include &lt;cmath&gt;
#include &lt;cstring&gt;

using namespace std;

const double PI = acos(-1.0);

double L;

double power(double x,int n)
{
    if(n==0) return 1;
    if(n==1) return x;

    double ret=1;
    while(n)
    {
        if(n&amp;1) ret = ret * x;
        n/=2; x *= x;
    }

    return ret;
}

// 大圆的定积分
double getF1(double x)
{
    double part1 = -x * (2*power(L,2)-3*L*x+power(x,2));
    double part2 = 2*power(L,2)*sqrt(2*L-x)*sqrt(x)*atan(sqrt(x)/sqrt(2*L-x));
    double part3 = 2*sqrt((2*L-x)*x);
    return (part1+part2)/part3;
}

// 小圆的定积分
double getF2(double x)
{
    double part1 = x * ( power(L,2) - 3 * L * x + 2 * power(x,2) + 2 * L * sqrt((L-x)*x));
    double part2 = power(L,2)*sqrt(L-x)*sqrt(x)*atan(sqrt(x)/sqrt(L-x));
    double part3 = 4 * sqrt((L-x)*x);
    return (part1-part2)/part3;
}

double getXP(double L)
{
    return (3-sqrt(7))*L/8;
}

int main()
{
    int T_T;
    scanf("%d",&amp;T_T);
    while(T_T--)
    {
        scanf("%lf",&amp;L);
        // 大圆弧与圆的交叉点
        double xp = getXP(L);

        // 交叉点下面的定积分
        double area_part1 = getF1(xp);
        double area_part2 = getF2(L/2)-getF2(xp);

        double s3 = (1-PI/4)*(L/2)*(L/2);
        double remain_1 = s3*3-2*(area_part1+area_part2);
        double area = L*L-PI*L*L/4-remain_1;

        printf("%.2lf\n",area*2);
    }

    return 0;
}
</code></pre>
]]></content>
    <summary type="html">
    <![CDATA[<p>博客恢复更新了,顺便看了下今年多校的题目…</p>
<h1 id="Hard_problem"><a href="http://acm.split.hdu.edu.cn/showproblem.php?pid=5858">Hard problem</a></h1><h4 id="Problem_Description">Problem Description</h4><p>cjj is fun with math problem. One day he found a Olympic Mathematics problem for primary school students. It is too difficult for cjj. Can you solve it?</p>
<p><img src="http://acm.split.hdu.edu.cn/data/images/C713-1002-1.jpg" alt=""></p>
<p>Give you the side length of the square L, you need to calculate the shaded area in the picture.</p>
<p>The full circle is the inscribed circle of the square, and the center of two quarter circle is the vertex of square, and its radius is the length of the square.</p>
<h4 id="Input">Input</h4><p>The first line contains a integer T(1&lt;=T&lt;=10000), means the number of the test case. Each case contains one line with integer l(1&lt;=l&lt;=10000).</p>
<h4 id="Output">Output</h4><p>For each test case, print one line, the shade area in the picture. The answer is round to two digit.</p>
<h4 id="Sample_Input">Sample Input</h4><p>1<br>1</p>
<h4 id="Sample_Output">Sample Output</h4><p>0.29</p>
<h4 id="Author">Author</h4><p>BUPT</p>
<h4 id="Source">Source</h4><p>2016 Multi-University Training Contest 10</p>
<p>如何计算阴影部分的面积还是很显然的.把原图分成两半,只看一边的话,先计算出小圆和大圆的交点,然后用积分分两段算出交点下方的面积就可以了.<br>主要是半圆的定积分的计算比较麻烦,求出的式子比较长…</p>
<p>$\frac{x \left(L^2-3 L x+2 L \sqrt{x (L-x)}+2 x^2\right)-L^2 \sqrt{x} \sqrt{L-x} \tan ^{-1}\left(\frac{\sqrt{x}}{\sqrt{L-x}}\right)}{4 \sqrt{x (L-x)}}$</p>
<p>$\frac{2 L^2 \sqrt{x} \sqrt{2 L-x} \tan ^{-1}\left(\frac{\sqrt{x}}{\sqrt{2 L-x}}\right)-x \left(2 L^2-3 L x+x^2\right)}{2 \sqrt{x (2 L-x)}}$</p>]]>
    
    </summary>
    
      <category term="HDOJ" scheme="http://www.ckboss.cf/tags/HDOJ/"/>
    
      <category term="math" scheme="http://www.ckboss.cf/tags/math/"/>
    
      <category term="acm_math" scheme="http://www.ckboss.cf/categories/acm-math/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[服务器上Tornado的运行和部署]]></title>
    <link href="http://www.ckboss.cf/2016/05/30/Tornado%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <id>http://www.ckboss.cf/2016/05/30/Tornado的部署/</id>
    <published>2016-05-30T07:49:10.000Z</published>
    <updated>2016-05-30T08:09:53.000Z</updated>
    <content type="html"><![CDATA[<p>虽然tornado本身运行不需要服务器,但是真正部署的时候还是需要用一些设置才好保证稳定性.</p>
<h2 id="使用Nginx来负载均衡">使用Nginx来负载均衡</h2><p>可以同时开多个tornado进程,用Nginx来进行负载的均衡.</p>
<p>首先安装 Nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure></p>
<p>然后修改nignx的配置文件,/etc/nginx/nginx.conf<br>比如我要看4个进程8000~8003,现在都通过80进行跳转:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user nginx;</span></span><br><span class="line">worker_processes <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">error_<span class="built_in">log</span> /var/<span class="built_in">log</span>/nginx/error.log;</span><br><span class="line">pid /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections <span class="number">1024</span>;</span><br><span class="line">    use epoll;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    <span class="comment"># Enumerate all the Tornado servers here</span></span><br><span class="line">    upstream mysite.com &#123;</span><br><span class="line">        server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8000</span>;</span><br><span class="line">        server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8001</span>;</span><br><span class="line">        server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8002</span>;</span><br><span class="line">        server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8003</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /usr/local/nginx/conf/mime.types;</span></span><br><span class="line">    default_<span class="built_in">type</span> application/octet-stream;</span><br><span class="line"></span><br><span class="line">    access_<span class="built_in">log</span> /var/<span class="built_in">log</span>/nginx/access.log;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout <span class="number">65</span>;</span><br><span class="line">    proxy_<span class="built_in">read</span>_timeout <span class="number">200</span>;</span><br><span class="line">    sendfile on;</span><br><span class="line">    tcp_nopush on;</span><br><span class="line">    tcp_nodelay on;</span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length <span class="number">1000</span>;</span><br><span class="line">    gzip_proxied any;</span><br><span class="line">    gzip_types text/plain text/css text/xml</span><br><span class="line">               application/x-javascript application/xml</span><br><span class="line">               application/atom+xml text/javascript;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Only retry if there was a communication error, not a timeout</span></span><br><span class="line">    <span class="comment"># on the Tornado server (to avoid propagating "queries of death"</span></span><br><span class="line">    <span class="comment"># to all frontends)</span></span><br><span class="line">    proxy_next_upstream error;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">	    <span class="comment">#your ip address</span></span><br><span class="line">        server_name <span class="number">172.16</span>.<span class="number">83.129</span>;</span><br><span class="line">        <span class="comment"># Allow file uploads</span></span><br><span class="line">        client_max_body_size <span class="number">50</span>M;</span><br><span class="line"></span><br><span class="line">        location static/ &#123;</span><br><span class="line">            root /srv/www/mysite.com/MySite/;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$query_string</span>) &#123;</span><br><span class="line">                expires max;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        location = /favicon.ico &#123;</span><br><span class="line">            rewrite (.*) /static/favicon.ico;</span><br><span class="line">        &#125;</span><br><span class="line">        location = /robots.txt &#123;</span><br><span class="line">            rewrite (.*) /static/robots.txt;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass_header Server;</span><br><span class="line">            proxy_<span class="built_in">set</span>_header Host <span class="variable">$http_host</span>;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_<span class="built_in">set</span>_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            proxy_<span class="built_in">set</span>_header X-Scheme <span class="variable">$scheme</span>;</span><br><span class="line">            proxy_pass http://mysite.com;</span><br><span class="line">	    proxy_<span class="built_in">set</span>_header REMOTE_ADD <span class="variable">$remote_addr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重启nginx服务就可以了,出了问题可以去看/var/log/nginx/error.log<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure></p>
<h2 id="使用Supervisor来管理tornado">使用Supervisor来管理tornado</h2><p>使用Supervisor可以自动监视tornado进程,在其死掉的时候自动重启.</p>
<p>安装Supervisor<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install supervisor</span><br></pre></td></tr></table></figure></p>
<p>生成配置文件:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">echo</span>_supervisord_conf &gt; /etc/supervisord.conf</span><br></pre></td></tr></table></figure></p>
<p>在生成的配置文件中最后加入Torando的进程的启动方式,类似这样.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[program:exe1_8000]</span><br><span class="line"><span class="built_in">command</span>=python3 /home/ckboss/Web/demo.py -port=<span class="number">8000</span></span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">redirect_stderr=<span class="literal">true</span></span><br><span class="line">stdout_logfile=logfile</span><br></pre></td></tr></table></figure>
<p>然后重启supervisord,最好指明配置文件在哪</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo supervisord -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure>
<p>其他的重启办法</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service supervisor start</span><br><span class="line">sudo supervisorctl restart all</span><br></pre></td></tr></table></figure>
<p>然后就可以了.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>虽然tornado本身运行不需要服务器,但是真正部署的时候还是需要用一些设置才好保证稳定性.</p>
<h2 id="使用Nginx来负载均衡">使用Nginx来负载均衡</h2><p>可以同时开多个tornado进程,用Nginx来进行负载的均衡.</p>
<p>首先安装]]>
    </summary>
    
      <category term="python" scheme="http://www.ckboss.cf/tags/python/"/>
    
      <category term="tornado" scheme="http://www.ckboss.cf/tags/tornado/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[antergos使用小记]]></title>
    <link href="http://www.ckboss.cf/2016/05/12/antergos%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/"/>
    <id>http://www.ckboss.cf/2016/05/12/antergos使用小记/</id>
    <published>2016-05-12T04:53:45.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://antergos.com/wp-content/uploads/2014/09/antergos-clean.png" alt="antergos"></p>
<p>antergos是arch的衍伸版，用的是arch+antergos的源。即可以方便的安装又可以使用arch的滚动更新和<br>强大包管理功能。</p>
<p>一些安装和配置的时候遇到的问题。</p>
<h2 id="fcitx-sogoupinyin_输入法的安装">fcitx-sogoupinyin 输入法的安装</h2><p>在aur里有打包好的搜狗拼音，不过安装好之后并不能切换出来，最后执行这两句就好了。。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-im</span><br><span class="line">sudo pacman -S fcitx-configtool</span><br></pre></td></tr></table></figure>
<h2 id="VMware的安装">VMware的安装</h2><p>arch的安装方式有点不太一样，安装的时候忽略没有/etc/init.d的错误，然后执行以下两句就可以了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S linux-headers </span><br><span class="line">sudo pacman -S base-devel</span><br></pre></td></tr></table></figure>
<h2 id="中文字体的设置">中文字体的设置</h2><p>安装 <code>yaourt -S fontconfig-infinality</code>后中文字体的显示会好很多.<br>m1+ mn 是一个非常好用的，中英文共存的等宽字体。</p>
<p><del>最后先试用一阵，看看会不会滚挂掉再说</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://antergos.com/wp-content/uploads/2014/09/antergos-clean.png" alt="antergos"></p>
<p>antergos是arch的衍伸版，用的是arch+antergos的源]]>
    </summary>
    
      <category term="arch" scheme="http://www.ckboss.cf/tags/arch/"/>
    
      <category term="arch" scheme="http://www.ckboss.cf/categories/arch/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[简单的Java生产者和消费者]]></title>
    <link href="http://www.ckboss.cf/2016/04/23/Java%E7%94%9F%E4%BA%A7%E8%80%85%E5%92%8C%E6%B6%88%E8%B4%B9%E8%80%85/"/>
    <id>http://www.ckboss.cf/2016/04/23/Java生产者和消费者/</id>
    <published>2016-04-23T15:53:23.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>生产者和消费者是经典的一种模型</p>
<p>用Blockqueue，可以轻松实现这种多线程模型.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> tools.JEdisSetting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.BlockingQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.LinkedBlockingQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.SynchronousQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by ckboss on 16-4-16.</span><br><span class="line"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Producer</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CountDownLatch countDownLatch;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> BlockingQueue queue;</span><br><span class="line">    <span class="keyword">private</span> File dir;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"></span><br><span class="line">    Producer(<span class="keyword">int</span> _id,CountDownLatch contdown,String filepath , BlockingQueue queue) &#123;</span><br><span class="line">        <span class="keyword">this</span>.queue = queue;</span><br><span class="line">        dir = <span class="keyword">new</span> File(filepath);</span><br><span class="line">        id = _id;</span><br><span class="line">        countDownLatch = contdown;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            File[] files = dir.listFiles();</span><br><span class="line">            <span class="keyword">for</span>(File file : files) &#123;</span><br><span class="line">                Report report = <span class="keyword">new</span> Report(file.getAbsolutePath());</span><br><span class="line">                queue.add(report);</span><br><span class="line">            &#125;</span><br><span class="line">            countDownLatch.countDown();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CountDownLatch countDownLatch;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> BlockingQueue queue;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> Jedis jedis;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Field[] fields = Report.class.getDeclaredFields();</span><br><span class="line"></span><br><span class="line">    Consumer(<span class="keyword">int</span> _id,CountDownLatch contdown,BlockingQueue queue) &#123;</span><br><span class="line">        <span class="keyword">this</span>.queue = queue;</span><br><span class="line">        jedis = JEdisSetting.jedisPool.getResource();</span><br><span class="line">        id=_id;</span><br><span class="line">        countDownLatch = contdown;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">                Report report = (Report) queue.take();</span><br><span class="line">                GaoIt(report);</span><br><span class="line">            &#125;</span><br><span class="line">            countDownLatch.countDown();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GaoIt</span><span class="params">(Report report)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Docu doc = <span class="keyword">new</span> Docu(report);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MulitPretreatment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AtomicInteger cnt = <span class="keyword">new</span> AtomicInteger(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Jedis jedis;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Field[] fields = Report.class.getDeclaredFields();</span><br><span class="line"></span><br><span class="line">    MulitPretreatment() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">long</span> end = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> N = <span class="number">30</span>;</span><br><span class="line">        BlockingQueue blockingQueue = <span class="keyword">new</span> LinkedBlockingQueue&lt;&gt;();</span><br><span class="line">        CountDownLatch doneSignal = <span class="keyword">new</span> CountDownLatch(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        String filepath = <span class="string">"/home/ckboss/Documents/MachineLearning/数据集/搜索数据/trec_data1_renameCheckSum"</span>;</span><br><span class="line">        <span class="comment">//String filepath = "/home/ckboss/Documents/MachineLearning/数据集/搜索数据/101";</span></span><br><span class="line">        Producer producer0 = <span class="keyword">new</span> Producer(<span class="number">0</span>,doneSignal,filepath,blockingQueue);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> Thread(producer0).start();</span><br><span class="line">        <span class="comment">//new Thread(producer1).start();</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            doneSignal.await();</span><br><span class="line">            System.out.println(<span class="string">"queue size: "</span>+blockingQueue.size());</span><br><span class="line">            doneSignal = <span class="keyword">new</span> CountDownLatch(N);</span><br><span class="line">            <span class="keyword">int</span> size = blockingQueue.size();</span><br><span class="line">            jedis.set(<span class="string">"docnum"</span>,String.valueOf(size));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Consumer&gt; ac = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++) &#123;</span><br><span class="line">            ac.add(<span class="keyword">new</span> Consumer(i,doneSignal,blockingQueue));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++) &#123;</span><br><span class="line">            <span class="keyword">new</span> Thread(ac.get(i)).start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            doneSignal.await();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 合并</span></span><br><span class="line">            <span class="comment">// calu avg len</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MulitPretreatment();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>生产者会吧所有的doc预处理到BlockQueue中，多个消费者会从这个队列中获得doc来进行处理。</p>
<p>可以用一个叫CountDownLatch的计数器来隔离每个过程。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>生产者和消费者是经典的一种模型</p>
<p>用Blockqueue，可以轻松实现这种多线程模型.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line]]>
    </summary>
    
      <category term="Java" scheme="http://www.ckboss.cf/tags/Java/"/>
    
      <category term="多线程" scheme="http://www.ckboss.cf/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="Java" scheme="http://www.ckboss.cf/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu16.04初体验]]></title>
    <link href="http://www.ckboss.cf/2016/04/23/ubuntu16-04%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://www.ckboss.cf/2016/04/23/ubuntu16-04初体验/</id>
    <published>2016-04-23T14:32:57.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>大概两天前，4月21日，第一时间下载了ubuntu16.04。并作死安装升级。</p>
<p>你要是问我体验怎么样，那我只能回答体验是非常的差的。。。</p>
<p>总的来说初体验的感觉就是问题非常的多，根本不像个LTS版的样子，小白鼠fedaro都比现在的ubuntu稳定。。。。</p>
<p>记得14.04刚出来的时候我也是立刻换了新版的，那时候似乎还没有这么多的问题。。。</p>
<p>一些遇到的问题：</p>
<ol>
<li>首先作死用16.04的iso来升级14.04，结果可想而知。ubuntu的升级就从来就不会成功的。我用iso升级了3刚小时，最后爆出的只有一串的error而已</li>
<li>然后清空系统进行重装，安装还是比较顺利的，只是在选择安装第三方包的时候，似乎有个安全启动什么的要输入一下密码（其实是第一个隐藏坑）。。</li>
<li>16.04还是使用的unity7,界面和14.04一样，没有什么改变，令人有些小失望（不过很快就因为未知的原因再也打不开了）</li>
<li>安装了一下nvidia显卡驱动和fcitx框架，准备上搜狗输入法，登陆出去了一下，OK这回循环登陆再也进不去桌面了。不知道是fcitx的问题还是显卡驱动的问题。</li>
<li>安装了xfce的桌面环境，这回可以登陆桌面了，虽然用了附加驱动里推荐的nvidia361,但是驱动并没有装好。</li>
<li>中文字体渲染非常糟糕，默认的字体细的根本没法看。尤其是在goolge浏览器中。最后用了插件把字体强制换成文泉驿的才勉强可以正常显示。</li>
</ol>
<p>16.04自带的包更新了不少，不过很多软件并没有做好兼容工作。</p>
<ol>
<li>装了搜狗的输入法，桌面上同时出现两个。。。（现在用fcitx框架自带的一个输入法，用起来还行）</li>
<li>vmware不能新建虚拟机，因为安装的时候不小心开启了安全boot，需要手动去关闭</li>
<li>ohmyzsh默认配置不能够保留history的记录，这个稍微改动一下就好了</li>
<li>很多软件的中文字体都非常的细</li>
<li>一些命令行工具变了，比如nm-tool没有了，取而代之的是nmcli（这个似乎变了有一阵了）</li>
</ol>
<p>总之，没有特殊需求，不建议在现阶段升级，等着这波bug修完了再升级。。。。</p>
<h5 id="来张screenfetch：">来张screenfetch：</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#10140;  screenFetch-master ./screenfetch-dev &#10;                          ./+o+-       ckboss@ckboss-HP&#10;                  yyyyy- -yyyyyy+      OS: ubuntu Ubuntu 16.04 xenial&#10;               ://+//////-yyyyyyo      Kernel: x86_64 Linux 4.4.0-21-generic&#10;           .++ .:/++++++/-.+sss/`      Uptime: 6h 14m&#10;         .:++o:  /++++++++/:--:/-      Packages: 2091&#10;        o:+o+:++.`..```.-/oo+++++/     Shell: zsh 5.1.1&#10;       .:+o:+o/.          `+sssoo+/    Resolution: 1920x1080&#10;  .++/+:+oo+o:`             /sssooo.   DE: XFCE&#10; /+++//+:`oo+o               /::--:.   WM: Xfwm4&#10; \+/+o+++`o++o               ++////.   WM Theme: Numix&#10;  .++.o+++oo+:`             /dddhhh.   GTK Theme: Greybird [GTK2]&#10;       .+.o+oo:.          `oddhhhh+    Icon Theme: elementary-xfce-darker&#10;        \+.++o+o``-````.:ohdhhhhh+     Font: Ubuntu Medium 12&#10;         `:o+++ `ohhhhhhhhyo++os:      CPU: Intel Core i7-6500U CPU @ 3.1GHz&#10;           .o:`.syhhhhhhh/.oo++o`      RAM: 3997MiB / 7822MiB&#10;               /osyyyyyyo++ooo+++/    &#10;                   ````` +oo+++o\:    &#10;                          `oo++.</span><br></pre></td></tr></table></figure>
<p>附Chrome字体特别细的解决办法：</p>
<ol>
<li>安装文泉驿微米黑</li>
<li>在chrome的设置中选择高级设置字体设置，选择使用插件设置默认字体为文泉驿微米黑</li>
</ol>
<p>下载安装一些win10的字体可以改善中文字体的显示。。。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>大概两天前，4月21日，第一时间下载了ubuntu16.04。并作死安装升级。</p>
<p>你要是问我体验怎么样，那我只能回答体验是非常的差的。。。</p>
<p>总的来说初体验的感觉就是问题非常的多，根本不像个LTS版的样子，小白鼠fedaro都比现在的ubuntu稳定]]>
    </summary>
    
      <category term="Ubuntu" scheme="http://www.ckboss.cf/tags/Ubuntu/"/>
    
      <category term="Ubuntu" scheme="http://www.ckboss.cf/categories/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu创建无线热点的神器!!]]></title>
    <link href="http://www.ckboss.cf/2016/04/16/ubuntu%E5%88%9B%E5%BB%BA%E6%97%A0%E7%BA%BF%E7%83%AD%E7%82%B9/"/>
    <id>http://www.ckboss.cf/2016/04/16/ubuntu创建无线热点/</id>
    <published>2016-04-16T04:54:27.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>以前用ubuntu共享wifi一直是一个比较麻烦事情….</p>
<p>直到遇到了一个这样的神器:</p>
<h3 id="create_ap"><a href="https://github.com/oblique/create_ap" target="_blank" rel="external">create_ap</a></h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create_ap wlan0 eth0 MyAccessPoint MyPassPhrase</span><br></pre></td></tr></table></figure>
<p>一行轻松搞定~~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>以前用ubuntu共享wifi一直是一个比较麻烦事情….</p>
<p>直到遇到了一个这样的神器:</p>
<h3 id="create_ap"><a href="https://github.com/oblique/create_ap" target="_blank" r]]>
    </summary>
    
      <category term="Ubuntu" scheme="http://www.ckboss.cf/tags/Ubuntu/"/>
    
      <category term="实用工具" scheme="http://www.ckboss.cf/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Ubuntu相关" scheme="http://www.ckboss.cf/categories/Ubuntu%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Log4j2入门]]></title>
    <link href="http://www.ckboss.cf/2016/04/12/Log4j2%E5%85%A5%E9%97%A8/"/>
    <id>http://www.ckboss.cf/2016/04/12/Log4j2入门/</id>
    <published>2016-04-12T05:45:52.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>总是用printf调试不太方便管理,稍微研究了一下log4j的用法,其实都可以在<a href="https://logging.apache.org/log4j/2.0/faq.html" target="_blank" rel="external">FAQ</a>里找到.</p>
<ul>
<li><p>Log4j2<a href="https://logging.apache.org/log4j/2.x/" target="_blank" rel="external">官网</a></p>
</li>
<li><p>需要两个包: <strong>log4j-api-2.5.jar , log4j-core-2.5.jar</strong></p>
</li>
<li><p>配置文件名是  log4j2.xml</p>
</li>
</ul>
<p>网上找的example文件:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">Configuration</span> <span class="attribute">status</span>=<span class="value">"WARN"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">Appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Console</span> <span class="attribute">name</span>=<span class="value">"Console"</span> <span class="attribute">target</span>=<span class="value">"SYSTEM_OUT"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">PatternLayout</span> <span class="attribute">pattern</span>=<span class="value">"%d&#123;HH:mm:ss.SSS&#125; %-5level %logger&#123;36&#125; - %msg%n"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">Console</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Console</span> <span class="attribute">name</span>=<span class="value">"SlowConsole"</span> <span class="attribute">target</span>=<span class="value">"SYSTEM_OUT"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">PatternLayout</span> <span class="attribute">pattern</span>=<span class="value">"%highlight&#123;%d&#123;HH:mm:ss.SSS&#125; %-5level %logger&#123;36&#125;.%M() @%L - %msg%n&#125;&#123;FATAL=red, ERROR=red, WARN=yellow, INFO=black, DEBUG=green, TRACE=blue&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">Console</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">File</span> <span class="attribute">name</span>=<span class="value">"File"</span> <span class="attribute">fileName</span>=<span class="value">"C:\log\out.txt"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">PatternLayout</span> <span class="attribute">pattern</span>=<span class="value">"%d&#123;HH:mm:ss.SSS&#125; %-5level %logger&#123;36&#125; - %msg%n"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">File</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">Appenders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">Loggers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">logger</span> <span class="attribute">name</span>=<span class="value">"org.abc.ea.web"</span> <span class="attribute">level</span>=<span class="value">"ALL"</span> <span class="attribute">additivity</span>=<span class="value">"false"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Log4j for the WEB MODULE --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">appender-ref</span> <span class="attribute">ref</span>=<span class="value">"SlowConsole"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">logger</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">logger</span> <span class="attribute">name</span>=<span class="value">"org.abc.ea.ejb"</span> <span class="attribute">level</span>=<span class="value">"ALL"</span> <span class="attribute">additivity</span>=<span class="value">"false"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Log4j for the EJB MODULE --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">appender-ref</span> <span class="attribute">ref</span>=<span class="value">"SlowConsole"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">logger</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Root</span> <span class="attribute">level</span>=<span class="value">"ERROR"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">AppenderRef</span> <span class="attribute">ref</span>=<span class="value">"Console"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">AppenderRef</span> <span class="attribute">ref</span>=<span class="value">"File"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">Root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">Loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">Configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>总是用printf调试不太方便管理,稍微研究了一下log4j的用法,其实都可以在<a href="https://logging.apache.org/log4j/2.0/faq.html" target="_blank" rel="external">FAQ</a>里找到]]>
    </summary>
    
      <category term="Java" scheme="http://www.ckboss.cf/tags/Java/"/>
    
      <category term="Log4j" scheme="http://www.ckboss.cf/tags/Log4j/"/>
    
      <category term="Java" scheme="http://www.ckboss.cf/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用朴素贝叶斯进行垃圾邮件分类]]></title>
    <link href="http://www.ckboss.cf/2016/04/09/%E7%94%A8%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E8%BF%9B%E8%A1%8C%E5%9E%83%E5%9C%BE%E9%82%AE%E4%BB%B6%E5%88%86%E7%B1%BB/"/>
    <id>http://www.ckboss.cf/2016/04/09/用朴素贝叶斯进行垃圾邮件分类/</id>
    <published>2016-04-08T17:38:59.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>朴素贝叶斯算法非常简单,但是在实际运用中效果往往还不错…</p>
<p>贝叶斯公式:<br>$P(A,B)=P(A|B)<em>P(B)=P(B|A)</em>P(A)$<br>非常简单的概率公式,但有一个奇妙的用途就是可以让两个条件概率之间互相转换.</p>
<p>举个例子:</p>
<ul>
<li>今天天上有云的概率 $P(A)$</li>
<li>今天天上下雨的概率 $P(B)$</li>
<li>今天从天上有云推出今天天上下雨的条件概率是 $P(B|A)$</li>
</ul>
<p>但这个概率并不太好直接计算,不过我们可以统计出今天天上下雨并且天上有云的概率$P(A|B)$,这样就可以用贝叶斯公式来推出$P(B|A)$了,统计的数据越多,推出来的概率也就越准确.</p>
<p>再来看一下如何用贝叶斯的方法进行垃圾邮件的判断.<br>假设我们有n封正常邮件和m封垃圾邮件的样本.</p>
<p>设$P(S)$为垃圾邮件的概率,$P(H)$为不是垃圾邮件的概率.</p>
<p>$P(S)+P(H)=1$</p>
<p>获得这个样本的概率$P$为: $P=P(S)^m*(1-P(S))^n$</p>
<p>对P进行求导可以得到: $m x^{m-1} (1-x)^n-n x^m (1-x)^{n-1},x=P(S)$</p>
<p>可以看出$P(S)=m/(n+m)$时,概率P的可能性最大.</p>
<p>假设一个封邮件包含了$D={w1,w2,w3,..wk}$个单词.<br>那么这封邮件是垃圾邮件并且包含了这些单词的概率是:$$$P(D|S)$$$</p>
<p>$P(D|S)=P(w1,w2,w3,…,wk|S)$<br>$P(w1,w2,w3,…wk|S) = P(w1,w2,..,wk-1|S)*P(wk|S,w1,w2,w3,…,w_{k-1})$</p>
<p>反复利用这个链式转换可以得到:<br>$P(D|S) = P(w1|S)P(w2|s,w1)P(w3|S,w1,w2)…P(w<em>{k}|S,w1,w2,w3,…,w</em>{k-1})$</p>
<p>这个概率并不容易算出来,朴素贝叶斯用了一个很强的假设: <strong>所有的w都是独立的</strong></p>
<p>于是$P(D|S) = \left.\prod _{i=1}^k \text{P(wi}\right|S)$</p>
<p>这样概率就容易求多了:</p>
<p>$P(wi|S)=\frac{wi在垃圾邮件中出现的次数+1}{垃圾邮件的出现次数+1}$ (+1是为了防止有0出现)</p>
<p>这样,如果D这些单词出现这篇邮件是垃圾邮件的概率为:<br>$P(S|D) = \frac{P(D|S)<em>P(S)}{P(D)}$<br>同理,D这些单词出现但这个邮件不是垃圾邮件的概率为:<br>$P(H|D) = \frac{P(D|H)</em>P(H)}{P(D)}$<br>可以看到两个式子的分母是一样的,比较分子就可以了.<br>到这里这两个概率都已经非常容易计算了,那个出现的概率高,就选择哪一个就可以了.</p>
<p>在邮件分类中还有一点需要注意的是,一些经常出现但是没有实际意义的词如a,the,is等,可以去掉这样可以提升算法准确度.</p>
<p>虽然朴素贝叶斯分类有非常强的假设,但实际运行中效果还是非常好的,随便找的数据集的分类的准确率可以轻松达到80%以上.</p>
<h5 id="附:_java实现的代码:">附: java实现的代码:</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> meachinelearning;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by ckboss on 16-4-8.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NaiveBayes</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String trainset = <span class="string">"/home/ckboss/Documents/MachineLearning/数据集/贝叶斯分类器/Naive Bayes/spam_train.txt"</span>;</span><br><span class="line">    String testset = <span class="string">"/home/ckboss/Documents/MachineLearning/数据集/贝叶斯分类器/Naive Bayes/spam_test.txt"</span>;</span><br><span class="line">    String stopwordset = <span class="string">"/home/ckboss/Documents/MachineLearning/数据集/贝叶斯分类器/Naive Bayes/stopwords.txt"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataSet</span> </span>&#123;</span><br><span class="line">        List&lt;String[]&gt; data = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;K,V extends Comparable&lt;? <span class="keyword">super</span> V&gt; &gt; Map&lt;K,V&gt; sortByValue(Map&lt;K,V&gt; map) &#123;</span><br><span class="line"></span><br><span class="line">        Map&lt;K,V&gt; result = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Stream&lt;Map.Entry&lt;K,V&gt;&gt; st = map.entrySet().stream();</span><br><span class="line"></span><br><span class="line">        st.sorted(Comparator.comparing(e-&gt;e.getValue())).forEachOrdered(e-&gt;result.put(e.getKey(),e.getValue()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">WordProbability</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Map&lt;String,Integer&gt; number = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        Map&lt;String,Double&gt; probability = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">WordAdd</span><span class="params">(String word)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(number.get(word)==<span class="keyword">null</span>) &#123;</span><br><span class="line">                number.put(word,<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                number.put(word,number.get(word)+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">getProbability</span><span class="params">(<span class="keyword">int</span> sum)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(String word : number.keySet()) &#123;</span><br><span class="line">                <span class="keyword">double</span> x = (number.get(word)+(<span class="keyword">double</span>)<span class="number">1</span>)/(sum+(<span class="keyword">double</span>)<span class="number">1</span>);</span><br><span class="line">                probability.put(word,x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    WordProbability[] wordProbabilities = <span class="keyword">new</span> WordProbability[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span>[] emails = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    Set&lt;String&gt; stopwords = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PreGetStopWords</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(stopwordset));</span><br><span class="line">            <span class="keyword">while</span>(br.ready()) &#123;</span><br><span class="line">                String lines = br.readLine();</span><br><span class="line">                lines.replaceAll(<span class="string">"\n"</span>,<span class="string">""</span>);</span><br><span class="line">                lines.replaceAll(<span class="string">"\r"</span>,<span class="string">""</span>);</span><br><span class="line">                lines.replaceAll(<span class="string">" "</span>,<span class="string">""</span>);</span><br><span class="line">                stopwords.add(lines);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">DataSet <span class="title">ReadFile</span><span class="params">(String filepath)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            DataSet ret = <span class="keyword">new</span> DataSet();</span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(filepath));</span><br><span class="line">            <span class="keyword">while</span>(br.ready()) &#123;</span><br><span class="line">                String[] lines = br.readLine().split(<span class="string">" "</span>);</span><br><span class="line">                ret.data.add(lines);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    NaiveBayes() &#123;</span><br><span class="line"></span><br><span class="line">        DataSet traindata = ReadFile(<span class="keyword">this</span>.trainset);</span><br><span class="line">        DataSet testdata =  ReadFile(<span class="keyword">this</span>.testset);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span><br><span class="line">        DataSet testdata = ReadFile(this.trainset);</span><br><span class="line">        DataSet traindata =  ReadFile(this.testset);</span><br><span class="line">        */</span></span><br><span class="line"></span><br><span class="line">        wordProbabilities[<span class="number">0</span>] = <span class="keyword">new</span> WordProbability();</span><br><span class="line">        wordProbabilities[<span class="number">1</span>] = <span class="keyword">new</span> WordProbability();</span><br><span class="line"></span><br><span class="line">        PreGetStopWords();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// train</span></span><br><span class="line">        <span class="keyword">for</span>(String[] line : traindata.data) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> kind = Integer.valueOf(line[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> first = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(String word : line) &#123;</span><br><span class="line">                <span class="keyword">if</span>(first) &#123;</span><br><span class="line">                    first=<span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(stopwords.contains(word)) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                wordProbabilities[kind].WordAdd(word);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            emails[kind]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        wordProbabilities[<span class="number">0</span>].getProbability(emails[<span class="number">0</span>]);</span><br><span class="line">        wordProbabilities[<span class="number">1</span>].getProbability(emails[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//System.out.println(emails[0]+" , "+emails[1]);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span><br><span class="line">        Map&lt;String,Integer&gt; result = sortByValue(wordProbabilities[1].number);</span><br><span class="line">        int cnt=20;</span><br><span class="line">        for(String key : result.keySet()) &#123;</span><br><span class="line">            if(cnt&lt;0) break;</span><br><span class="line">            System.out.println(key+" -----&gt; "+result.get(key));</span><br><span class="line">            cnt--;</span><br><span class="line">        &#125;</span><br><span class="line">        */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> correct = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//read data</span></span><br><span class="line">        <span class="keyword">for</span>(String[] line : testdata.data) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> realkind = Integer.valueOf(line[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">double</span> isspam = (<span class="keyword">double</span>)(emails[<span class="number">1</span>]+<span class="number">1</span>)/(emails[<span class="number">0</span>]+emails[<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">double</span> notspam = (<span class="keyword">double</span>)(emails[<span class="number">0</span>]+<span class="number">1</span>)/(emails[<span class="number">0</span>]+emails[<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> first = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(String word : line) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(first) &#123;</span><br><span class="line">                    first=<span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    isspam = isspam * (wordProbabilities[<span class="number">1</span>].probability.get(word));</span><br><span class="line">                    notspam = notspam * (wordProbabilities[<span class="number">0</span>].probability.get(word));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> expect=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(isspam &gt; notspam) &#123;</span><br><span class="line">                expect = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(expect==realkind) &#123;</span><br><span class="line">                correct++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">"正确率: %.4f %%\n"</span>,(<span class="keyword">double</span>)(correct)/testdata.data.size()*<span class="number">100</span>.);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> NaiveBayes();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>朴素贝叶斯算法非常简单,但是在实际运用中效果往往还不错…</p>
<p>贝叶斯公式:<br>$P(A,B)=P(A|B)<em>P(B)=P(B|A)</em>P(A)$<br>非常简单的概率公式,但有一个奇妙的用途就是可以让两个条件概率之间互相转换.</p>
<p>举个例]]>
    </summary>
    
      <category term="MachineLearning" scheme="http://www.ckboss.cf/tags/MachineLearning/"/>
    
      <category term="MachineLearning" scheme="http://www.ckboss.cf/categories/MachineLearning/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu默认字体设置和Chrome书签栏的Bug]]></title>
    <link href="http://www.ckboss.cf/2016/03/26/Ubuntu%E9%BB%98%E8%AE%A4%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE%E5%92%8CChrome%E4%B9%A6%E7%AD%BE%E6%A0%8F%E7%9A%84Bug/"/>
    <id>http://www.ckboss.cf/2016/03/26/Ubuntu默认字体设置和Chrome书签栏的Bug/</id>
    <published>2016-03-26T06:01:59.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>ubuntu 默认字体设置:</p>
<p>在~/.fonts.conf中设置:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE fontconfig SYSTEM "fonts.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">fontconfig</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- created by WenQuanYi FcDesigner v0.5 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">match</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"family"</span>&gt;</span><span class="tag">&lt;<span class="title">string</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="title">string</span>&gt;</span><span class="tag">&lt;/<span class="title">test</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">edit</span> <span class="attribute">name</span>=<span class="value">"family"</span> <span class="attribute">mode</span>=<span class="value">"prepend"</span> <span class="attribute">binding</span>=<span class="value">"strong"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>Ubuntu<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">edit</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">match</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">match</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"family"</span>&gt;</span><span class="tag">&lt;<span class="title">string</span>&gt;</span>serif<span class="tag">&lt;/<span class="title">string</span>&gt;</span><span class="tag">&lt;/<span class="title">test</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">edit</span> <span class="attribute">name</span>=<span class="value">"family"</span> <span class="attribute">mode</span>=<span class="value">"prepend"</span> <span class="attribute">binding</span>=<span class="value">"strong"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>Ubuntu<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">edit</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">match</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">match</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"family"</span>&gt;</span><span class="tag">&lt;<span class="title">string</span>&gt;</span>monospace<span class="tag">&lt;/<span class="title">string</span>&gt;</span><span class="tag">&lt;/<span class="title">test</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">edit</span> <span class="attribute">name</span>=<span class="value">"family"</span> <span class="attribute">mode</span>=<span class="value">"prepend"</span> <span class="attribute">binding</span>=<span class="value">"strong"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>Ubuntu Mono<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">edit</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">match</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">fontconfig</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>配置文件可以在<a href="http://wenq.org/cloud/fcdesigner_local.html#" target="_blank" rel="external">这里</a>生成.</p>
<p>用类似: <code>fc-match mono</code>的命令可以查看默认的字体．</p>
<hr>
<p>如果字体更改后,Chrome的输入框和书签栏特别的卡…</p>
<p>可以看这个:<a href="http://suselinks.us/how-to-fix-slow-typing-in-chrome-addressbar-in-linux/" target="_blank" rel="external">linux 系统中 Chrome 地址栏输入卡顿的解决方法</a></p>
<blockquote>
<p>在 Chromium 的故障跟踪系统中有这么个故障：Omnibox popup is slow to paint on Linux &amp; ChromeOS when many suggestions are present，描述的现象和我遇到的一模一样。从该故障的描述和回复来看，可以总结出：</p>
<p>该现象从 Google Chrome 35 版本开始出现。<br>该故障和 Aura UI 有关，而 Aura UI 正是从 35版本开始引入的。<br>启动 Google Chrome 时带上 –enable-harfbuzz-rendertext 参数之后，可以启动 RenderTextHarfbuzz 来进行 UI 文本渲染，在地址栏的键入速度就会变快了。<br>看到这里，我已经抑制不住激动的心情，在 Google Chrome 的启动快捷方式里面火速加入 –enable-harfbuzz-rendertext 参数，重启 Google Chrome，双手张开，准备拥抱胜利的果实。</p>
<p>然而问题依旧……</p>
<p>为什么呢？再仔细阅读上述故障，comment 27 提到了：</p>
<p>　I’m hoping we can enable RenderTextHarfbuzz by default this week, now that font fallback landed. That still may not fix this issue, since RenderTextHarfBuzz::ShapeRun calls internal::CreateSkiaTypeface. I don’t think we ought to cache stylized fonts within a RenderText object, that probably wouldn’t help either. (in this scenario, the omnibox dropdown result views are being tossed and recreated as fast as possible) It seems like we’d need a centralized cache of fonts, so the most commonly used ones are readily available. Perhaps in the near term, OmniboxResultView could cache stylized FontLists for its RenderText instances.</p>
<p>原来问题的根源出在 Skia 的字体这块，然而由于 RenderTextHarfBuzz 还是调用了 internal::CreateSkiaTypeface，所以问题还是可能存在。</p>
<p>转折</p>
<p>有方向了，Skia 的字体问题和 CreateSkiaTypeface API！</p>
<p>再一次，又找到一个故障： Excessive call for SkFontConfigInterfaceDirect::matchFamilyName from OmniboxResultView</p>
<p>故障描述中说，为了渲染地址栏的弹出菜单，每当你输入一个字符， matchFamilyName() 方法就会被调用 100 到 200 次！ 同时 comment 30 给出了真正的问题根源：</p>
<p>　Google Chrome UI 的缺省字体继承自 Gnome 桌面设置（而不是 chrome://settings/）。<br>地址栏弹出框的缺省字体也是继承自 Gnome 桌面设置。<br>字体名称的标准名称和本地化名称不相同导致了 Skia 缓存无法命中。<br>Skia 缓存无法命中导致 fontconfig 频繁被调用，而该调用非常消耗 CPU 时间！<br>结论</p>
<p>啊哈！问题根源找到了！ 该 comment 的作者也提交补丁了，可是 Google Chrome 40、41 版本还没有打该补丁的呀，怎么办呢？ 上述故障的末尾也提到了一个规避方法，那就是修改 Gnome 桌面设置中（GTK）的缺省字体。我这里讲下以 KDE 作为默认桌面的系统的修改方法，打开 系统设置 -&gt; 应用程序外观 -&gt; GTK ，修改字体（默认是 无衬线）为 Droid Sans 或者 DejaVu Sans 或者任何其它没有本地化名称的字体。像默认的 无衬线 以及 文泉驿微米黑 这样的有本地化名称的就不行的， 无衬线 的标准名称是 Sans Serif， 无衬线 是它的本地化名称，这样的字体会导致 Skia 缓存无法命中。<br>根据我的测试，google-chrome-beta-44.0.2403.89 依然尚未合入该补丁。<br>对于 40 版本以前的 Google Chrome ，你还需要在启动 Google Chrome 时带上 –enable-harfbuzz-rendertext 参数。<br>做了上述修改之后，该文开头提到了4个性能问题都解决了！ Google Chrome 和 Opera 都变得异常流畅了，哦耶！</p>
</blockquote>
<p>总之就Chrome的一个bug,现在到了chrome49了还没有得到解决…<br>用一些系统默认的字体就好了,比如Ubuntu….</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>ubuntu 默认字体设置:</p>
<p>在~/.fonts.conf中设置:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span>]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[2016年3月:最近在干什么]]></title>
    <link href="http://www.ckboss.cf/2016/03/21/2016%E5%B9%B43%E6%9C%88-%E6%9C%80%E8%BF%91%E5%9C%A8%E5%B9%B2%E4%BB%80%E4%B9%88/"/>
    <id>http://www.ckboss.cf/2016/03/21/2016年3月-最近在干什么/</id>
    <published>2016-03-21T14:41:32.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>很久没更新blog了,记录一下最近几个月来的近况.</p>
<h4 id="VirtualJudgePY_的_第一版">VirtualJudgePY 的 第一版</h4><p>曾经尝试过搭建搭建hustVJ,记得那时候各种难搭,没有文档,安装说明混乱,代码太复杂等种种原因,一共也只在本地搭建成功过一次老的版本,最新的版本甚至连对应的sql文件都找不到了.于是准备称毕业设计的计划山寨HustVJ做一个轻量级容易使用的virtualJudge.</p>
<p>当然做vj的其他原因还有当时对爬虫的兴趣,外加练习python和VJ自己留着用.</p>
<p>选择了python3+tornado作为开发的框架,在选择tornado之前尝试学习了一下django,发现djiango框架很强大,什么东西都帮你做好了,不太喜欢这种限制太多的重量级框架,于是就选择了相对轻量级并且更加自由的tornado.</p>
<p>以前听说过scrapy这个爬虫库很厉害,据说还支持python3.遂下载下来,结果发现3.x版本里的字典类型的一个变量名改了,导致scrapy不能正常运行.于是网页爬虫只能通过requests手工写了,好在各大OJ的页面结构都很简单..</p>
<p>在VirtualJudgePY之前,连html都没怎么写过.于是一切都从0开始自己摸索,花了1个多月时间把整个VJ的框架都搭了起来.虽然python没有很强的面向对象要求,但写的时候一直很注意结构化.最后的结果基本满意,尤其是OJ的添加,只需要按照规则实现几个类,完全不需要了解VJ的整结构就可以添加新的OJ.自己尝试手动添加了5个OJ后觉得这套设计确实很方便,于是就又发掘BnuVJ的网络接口,实现了一个VVjudge,最后支持的OJ数和HustOJ一样多了.</p>
<p>受限于人力和自己的需求,Contest功能不准备详细的写了…</p>
<p><img src="http://ww1.sinaimg.cn/mw1024/50a04a61gw1f1xwn7vsqdj21330qhth1.jpg" alt="首页"></p>
<p>第一个web app 基本都是用tornado在服务端进行渲染,没做动态渲染的效果,操作逻辑山寨HDU/PKU,配色山寨HDU,接口盗用Bnuoj,python+html模板代码约4k+,本来是赤裸裸的python项目,因为手贱上传了一个MathJax的js包,github上瞬间js代码的比例占据了99.7%,于是从一个python项目强行被归类到js项目去了…</p>
<h4 id="软件小作坊">软件小作坊</h4><p>上学期被提前喊到华东师范来当一个,某项目的码农,<strong>包吃住,没收入,写爬虫or打杂</strong>….</p>
<p>分配的第一个工作就是写爬虫,而且还让我用一个祖传原创的某java爬虫框架.当时对java爬虫了解不多,直到有一天我在github上看到了一个叫WebCollector的爬虫框架,卧槽这代码一模一样!!!卧槽教程里的example也一模一样!!!卧槽就换了个包名就算自己写的?还发了片论文!!感觉真是日了狗了…而且原版的代码都3.0了,这个抄袭的还只是抄的2.x的版本.</p>
<p>学校这边还表示用祖传代码比较好,不过我没叼…最后还是用的原版.不过后来又看到了一个叫WebMagic的框架,感觉这个设计的更好用一些,后来还尝试使用了一次,可惜看到的时候该写的爬虫已经写完了…</p>
<p>爬虫写完后,又加了个lucene的搜索到那个项目里,后来就没怎么干和这个项目相关的事情了.</p>
<p>再说说小作坊的事情,这个某国企和学校合作的项目,企业方面水平奇差,没有一个美工就拿着那种软件示意图当做原型去做UI了,一个图显示的东西两个月都做不出来,最后的效果还不如一个学长一个晚上做出的示意图好.去掉这个图不说,整个项目企业方面两个月就做了个登陆界面.</p>
<p>就软件项目管理来说,也是很失败的,整个软件架构虽然图上画的结构很清楚,开会上说的分工也很清楚,但做起来前后端的接口都没有定义就开始写了,后端给前端的东西就一个jar包,接口?啥都没有,自己去凑,第一次看到这种开发方式,也许着也是前端开发奇慢的一个原因吧.</p>
<p>人员方面的变动,总共4个人两个月走了两个,最后产品经理也跳槽了,最终这个软件项目因为<strong>非技术性原因</strong>暂停了…</p>
<p>第一次做正式项目就这么结束了,这个故事告诉我们这种没啥含金量的学术产业化多么的坑爹….</p>
<h4 id="其他">其他</h4><p>项目结束了也好,空余了很多时间可以来做自己的事情,最近在看机器学习+基本的数学,最近Alphago不是很火吗?咱以后搞个大数据算命也是不错的….这些算法的研究还是非常有价值的,掌握核心技术才会有真正的竞争力,学习阶段就应该多花点时间研究一些原理,底层的东西.厚积才能薄发…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>很久没更新blog了,记录一下最近几个月来的近况.</p>
<h4 id="VirtualJudgePY_的_第一版">VirtualJudgePY 的 第一版</h4><p>曾经尝试过搭建搭建hustVJ,记得那时候各种难搭,没有文档,安装说明混乱,代码太复杂等种种原因,]]>
    </summary>
    
      <category term="日常" scheme="http://www.ckboss.cf/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="日常" scheme="http://www.ckboss.cf/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[qlcoder-时间线2]]></title>
    <link href="http://www.ckboss.cf/2016/03/21/qlcoder-%E6%97%B6%E9%97%B4%E7%BA%BF2/"/>
    <id>http://www.ckboss.cf/2016/03/21/qlcoder-时间线2/</id>
    <published>2016-03-21T14:29:59.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<h4 id="近况:">近况:</h4><p>写了不少业务代码…</p>
<p>VirtualJudgePY第一个版本也接近完工…</p>
<p>平时没事的时候主要看一些数学和机器学习入门书和java多线程和haskell和…</p>
<p>当然,最主要的事情是为了键盘去做qlcoder..</p>
<p>很久没更新blog了,主要感觉自己退ACM后没啥东西好写的…</p>
<hr>
<p>最近在qlcoder看到了一个关于时间线的问题…</p>
<p><a href="http://www.qlcoder.com/task/7662" target="_blank" rel="external">链接</a></p>
<p>然后就用分块的办法跑了一下,大概一天就出来了….</p>
<p>这个问题主要在于要对质数进行特殊的处理,暴力的方法肯定是要爆内存和超时的.</p>
<p>1000w中有大约60w+个质数,我们可以通过对质数分块来一定程度上降低时间复杂度.</p>
<h5 id="具体方法如下:">具体方法如下:</h5><p>将质数分为800块每块800个,为啥要这样分呢?(其实是$\sqrt{n} * \sqrt{n}$)</p>
<p>我们来考虑一下分块之后的操作.</p>
<p>对于P操作:</p>
<p><strong> p x msg </strong></p>
<ul>
<li><p>对于x,我们先直接向x的倍数直接推送x的信息.这个时间复杂度很低大概是$O(nlogn)$</p>
</li>
<li><p>如果x是质数,我们直接向x所属的质数块中推送一条信息,只推送到质数块里就好了</p>
</li>
</ul>
<p>分块后,p操作占用的时间其实很少</p>
<p>对于v操作:</p>
<p><strong> v x </strong></p>
<p>x 应该接收到的信息应该有两个部分</p>
<ol>
<li>由x的因数直接推送过来的信息(这个部分的信息应该在p操作时就处理好了)</li>
<li>由比他大的质数推送过来的信息(这个部分的处理很占时间)</li>
</ol>
<p>如何找到那些质数推送过来的消息呢?</p>
<p>对于来源1的消息可以存在队列中,v操作完了之后清空.<br>对于来源2的消息是存在质数块中的,不能随意清空,所以我们还应该:</p>
<ol>
<li>对于质数块中的每一条消息,维护一个发送的时间t,和是由那个质数发出的</li>
<li>对于每个数x,应该维护一个lastV,记录对数字x上一次执行v操作的时间</li>
</ol>
<p>首先应该找到x在哪个质数块的后面或者在哪个质数块的范围内,这个也很容易确定,假设x在i号质数块中.</p>
<p><del>根据分块问题的一般做法,先对x所在的块进行暴力判断(大约有800个质数发送的消息,判读这个质数是否比x大,及该消息发送的时间是否大于lastV[x]),然后在对$i+1..800$的块内的所有消息的发送时间进行遍历检查,最后排序输出,就可以解决了….</del></p>
<p>很可惜,没有找到更有效率的做法.不过尽管如此,java的实现已经可以在3g内存占用的情况下,24小时以内解决了.</p>
<h5 id="伪代码:">伪代码:</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(br.ready()) &#123;</span><br><span class="line">          String line = br.readLine();</span><br><span class="line">          cnt++;</span><br><span class="line">          String[] itmes = line.split(<span class="string">" "</span>);</span><br><span class="line">          <span class="comment">//System.out.println("READ LINE: "+line);</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">int</span> x = Integer.valueOf(itmes[<span class="number">1</span>]);</span><br><span class="line">          <span class="keyword">int</span> kuai = <span class="keyword">this</span>.getKuai(x);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(itmes.length==<span class="number">3</span>) &#123;</span><br><span class="line">              <span class="comment">/// p</span></span><br><span class="line">              <span class="comment">/*</span><br><span class="line">              1. 往每个数的倍数上推送消息</span><br><span class="line">              2. 如果这个数是质数,则推送消息到所在的质数块</span><br><span class="line">               */</span></span><br><span class="line"></span><br><span class="line">              String info = itmes[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">              <span class="comment">/// 往每个数的倍数上推送消息</span></span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">int</span> i=x*<span class="number">2</span>;i&lt;maxn;i+=x) &#123;</span><br><span class="line">                  AddMsgToX(i,info,cnt);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">//如果这个数是质数,则推送消息到所在的质数块</span></span><br><span class="line">              <span class="keyword">if</span>(isPrime(x)) &#123;</span><br><span class="line">                  AddMsgToBag(kuai, info, cnt, x);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">/// v</span></span><br><span class="line">              <span class="comment">/*</span><br><span class="line">              1. 这个数字直接收到的消息</span><br><span class="line">              2. 在当前块中收到的消息</span><br><span class="line">              3. 在之后块中收到的消息</span><br><span class="line">               */</span></span><br><span class="line"></span><br><span class="line">              Vector&lt;Message&gt; receieve = <span class="keyword">new</span> Vector&lt;&gt;();</span><br><span class="line"></span><br><span class="line">              <span class="comment">//这个数字直接收到的消息</span></span><br><span class="line">              <span class="keyword">if</span>(<span class="keyword">this</span>.itemmessage[x] != <span class="keyword">null</span>) &#123;</span><br><span class="line">                  <span class="keyword">for</span> (Object o : <span class="keyword">this</span>.itemmessage[x]) &#123;</span><br><span class="line">                      receieve.add((Message) o);</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">//遍历当前所在的块的消息,将所在块中的时间关系和大小关系都满足的消息接收掉</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">int</span> lasttime = getLastV(x);</span><br><span class="line"></span><br><span class="line">              <span class="comment">//System.out.println("kuai: "+kuai+" x: "+x);</span></span><br><span class="line">              <span class="keyword">for</span>(Object o: <span class="keyword">this</span>.bagmessage[kuai])&#123;</span><br><span class="line">                  Message msg = (Message)o;</span><br><span class="line">                  <span class="keyword">if</span>( (msg.prime&gt;x) &amp;&amp; (msg.time&gt;lasttime) ) &#123;</span><br><span class="line">                      receieve.add(msg);</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">//在之后的块中接收满足时间关系的消息</span></span><br><span class="line"></span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">int</span> i=kuai+<span class="number">1</span>;i&lt;=pcz.bid;i++) &#123;</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">for</span>(Object o: <span class="keyword">this</span>.bagmessage[i]) &#123;</span><br><span class="line">                      Message msg = (Message)o;</span><br><span class="line">                      <span class="keyword">if</span>(msg.time&gt;lasttime) &#123;</span><br><span class="line">                          receieve.add(msg);</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">//按时间排序后即这次拉取到的消息,并同时更新时间</span></span><br><span class="line"></span><br><span class="line">              List&lt;Message&gt; vlist = receieve;</span><br><span class="line">              Collections.sort(vlist);</span><br><span class="line">              ClearMsgToX(x);</span><br><span class="line">              updLastV(x,cnt);</span><br><span class="line"></span><br><span class="line">              <span class="comment">//System.out.printf("%d Receive MSG!!\n",x);</span></span><br><span class="line">              <span class="comment">//System.out.println(vlist.size());</span></span><br><span class="line">              StringBuffer Hang = <span class="keyword">new</span> StringBuffer(<span class="string">""</span>);</span><br><span class="line">              <span class="keyword">boolean</span> first = <span class="keyword">true</span>;</span><br><span class="line">              <span class="keyword">for</span>(Message msg : vlist) &#123;</span><br><span class="line">                  <span class="keyword">if</span>(first==<span class="keyword">true</span>) &#123;</span><br><span class="line">                      first=<span class="keyword">false</span>;</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                      <span class="comment">//System.out.printf("-");</span></span><br><span class="line">                      Hang.append(<span class="string">"-"</span>);</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="comment">//System.out.printf(msg.msg);</span></span><br><span class="line">                  Hang.append(msg.msg);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">//System.out.println("");</span></span><br><span class="line">              MD5 md5 = <span class="keyword">new</span> MD5(String.valueOf(Hang));</span><br><span class="line">              pw.write(md5.getMD5()+<span class="string">"\n"</span>);</span><br><span class="line">              pw.flush();</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>
<h5 id="一些也许可行的优化">一些也许可行的优化</h5><ol>
<li>质数块中的数字用某种数据结构维护时间顺序,不再需要遍历所有的信息</li>
<li>在遍历之后的块中,可以开多个线程并行操作</li>
<li>…</li>
<li>…</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="近况:">近况:</h4><p>写了不少业务代码…</p>
<p>VirtualJudgePY第一个版本也接近完工…</p>
<p>平时没事的时候主要看一些数学和机器学习入门书和java多线程和haskell和…</p>
<p>当然,最主要的事情是为了键盘去做ql]]>
    </summary>
    
      <category term="qlcoder" scheme="http://www.ckboss.cf/tags/qlcoder/"/>
    
      <category term="数据结构" scheme="http://www.ckboss.cf/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="qlcoder" scheme="http://www.ckboss.cf/categories/qlcoder/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[喜大普奔，装备升级]]></title>
    <link href="http://www.ckboss.cf/2016/02/18/%E9%B8%9F%E6%9E%AA%E6%8D%A2%E7%82%AE/"/>
    <id>http://www.ckboss.cf/2016/02/18/鸟枪换炮/</id>
    <published>2016-02-18T02:38:27.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>喜大普奔，装备终于升级了 , hp 291tx，上了i7和8g的内存，写起代码更爽了。。。</p>
<p>就是高分屏字体有点小，感觉不太适应。。。</p>
<p>这款机型又两个严重的设计问题:</p>
<ol>
<li>fx功能键设置很奇葩.</li>
<li>触摸板是关不掉的.</li>
</ol>
<p>此外,硬盘声音很大…</p>
<p>迁移了下资料，又重装了遍ubuntu 14.04。。。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">                         ./+o+-       ckboss@ckboss-HP&#10;                 yyyyy- -yyyyyy+      OS: ubuntu Ubuntu 14.04 trusty&#10;              ://+//////-yyyyyyo      Kernel: x86_64 Linux 3.19.0-49-generic&#10;          .++ .:/++++++/-.+sss/`      Uptime: 13h 35m&#10;        .:++o:  /++++++++/:--:/-      Packages: 2120&#10;       o:+o+:++.`..```.-/oo+++++/     Shell: zsh 5.0.2&#10;      .:+o:+o/.          `+sssoo+/    Resolution: 1920x1080&#10; .++/+:+oo+o:`             /sssooo.   DE: XFCE&#10;/+++//+:`oo+o               /::--:.   WM: Xfwm4&#10;\+/+o+++`o++o               ++////.   WM Theme: Kokodi&#10; .++.o+++oo+:`             /dddhhh.   GTK Theme: Radiance [GTK2]&#10;      .+.o+oo:.          `oddhhhh+    Icon Theme: elementary-xfce&#10;       \+.++o+o``-````.:ohdhhhhh+     Font: Droid Sans 12&#10;        `:o+++ `ohhhhhhhhyo++os:      CPU: Intel Core i7-6500U CPU @ 2.1GHz&#10;          .o:`.syhhhhhhh/.oo++o`      RAM: 2677MiB / 7823MiB&#10;              /osyyyyyyo++ooo+++/    &#10;                  ````` +oo+++o\:    &#10;                         `oo++.</span><br></pre></td></tr></table></figure>
<p>记录几个安装时遇到的问题：</p>
<ul>
<li><strong>intel-dual-band-wireless-ac-3165-drivers</strong></li>
</ul>
<p>14.04下默认没有这个网卡的驱动…</p>
<p><a href="http://ubuntuforums.org/showthread.php?t=2214075" target="_blank" rel="external">http://ubuntuforums.org/showthread.php?t=2214075</a></p>
<p><a href="http://askubuntu.com/questions/672700/how-can-i-install-intel-dual-band-wireless-ac-3165-drivers" target="_blank" rel="external">http://askubuntu.com/questions/672700/how-can-i-install-intel-dual-band-wireless-ac-3165-drivers</a></p>
<p>在 <a href="https://wireless.wiki.kernel.org/en/users/Drivers/iwlwifi" target="_blank" rel="external">here</a> 可下载到最新的驱动.</p>
<blockquote>
<p>Intel® Wireless 7265<br>Intel® Wireless 3165 (starting from firmware XX.XX.13.0 and kernel 4.1)</p>
</blockquote>
<p>下载后改名,再解压到/lib/firmware/ 里就可以正常启动了</p>
<ul>
<li><strong>nodejs 安装</strong></li>
</ul>
<p>现在官网上直接提供二进制的安装包了,把node和npm软连接到 /usr/local/bin 里就可以了,很方便</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>喜大普奔，装备终于升级了 , hp 291tx，上了i7和8g的内存，写起代码更爽了。。。</p>
<p>就是高分屏字体有点小，感觉不太适应。。。</p>
<p>这款机型又两个严重的设计问题:</p>
<ol>
<li>fx功能键设置很奇葩.</li>
<li>触摸板是关不]]>
    </summary>
    
      <category term="日常" scheme="http://www.ckboss.cf/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="日常" scheme="http://www.ckboss.cf/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java模拟两小球的碰撞]]></title>
    <link href="http://www.ckboss.cf/2016/01/12/Java%E6%A8%A1%E6%8B%9F%E4%B8%A4%E5%B0%8F%E7%90%83%E7%9A%84%E7%A2%B0%E6%92%9E/"/>
    <id>http://www.ckboss.cf/2016/01/12/Java模拟两小球的碰撞/</id>
    <published>2016-01-11T17:09:39.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<h6 id="2016年第二更…">2016年第二更…</h6><p>最近写了一个模拟两个小球,无能量损失碰撞的java小程序….</p>
<h5 id="介绍_java_绘图的网站"><a href="https://www3.ntu.edu.sg/home/ehchua/programming/java/J4b_CustomGraphics.html" target="_blank" rel="external">介绍 java 绘图的网站</a></h5><h5 id="模拟两个小球碰撞_网上的demo">模拟两个小球碰撞  <a href="http://www.cnblogs.com/kenkofox/archive/2011/09/06/2168944.html" target="_blank" rel="external">网上的demo</a></h5><h5 id="碰撞时速度的变化"><a href="http://tina0152.blog.163.com/blog/static/119447958200910229109326/" target="_blank" rel="external">碰撞时速度的变化</a></h5><p><em>碰撞的代码</em>:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Collision</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">double</span> base = <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">double</span> w = <span class="number">500</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> eps = <span class="number">1e-5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">distanceSQ</span><span class="params">(Circle c1,Circle c2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> dx = Math.abs(c1.x - c2.x);</span><br><span class="line">        <span class="keyword">double</span> dy = Math.abs(c1.y - c2.y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dx*dx+dy*dy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CirToCirS</span><span class="params">(Circle c , Vector&lt;Circle&gt; vc)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> flag=<span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(Circle othercircle : vc) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(othercircle.equals(c)) &#123;</span><br><span class="line">                flag=<span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="keyword">false</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="keyword">true</span>) &#123;</span><br><span class="line">                CircleToCircle(c,othercircle);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CircleToCircle</span><span class="params">(Circle c1,Circle c2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(CheckCirlceToCircle(c1,c2)) &#123;</span><br><span class="line">            <span class="comment">/// change vector</span></span><br><span class="line"></span><br><span class="line">            VVector vss = <span class="keyword">new</span> VVector(c2.x-c1.x,c2.y-c1.y);</span><br><span class="line">            vss = vss.unitfy();</span><br><span class="line">            VVector vst = <span class="keyword">new</span> VVector(vss.y,-vss.x);</span><br><span class="line"></span><br><span class="line">            VVector v1 = <span class="keyword">new</span> VVector(c1.vx,c1.vy);</span><br><span class="line">            VVector v2 = <span class="keyword">new</span> VVector(c2.vx,c2.vy);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">double</span> v1s = v1.dotMul(vss);</span><br><span class="line">            <span class="keyword">double</span> v2s = v2.dotMul(vss);</span><br><span class="line">            <span class="keyword">double</span> v1t = v1.dotMul(vst);</span><br><span class="line">            <span class="keyword">double</span> v2t = v2.dotMul(vst);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">double</span> temp = v1s; v1s=v2s; v2s=temp;</span><br><span class="line"></span><br><span class="line">            VVector v1tV = vst.mul(v1t);</span><br><span class="line">            VVector v1sV = vss.mul(v1s);</span><br><span class="line">            VVector v2tV = vst.mul(v2t);</span><br><span class="line">            VVector v2sV = vss.mul(v2s);</span><br><span class="line"></span><br><span class="line">            c1.vx=v1tV.x+v1sV.x; c1.vy=v1tV.y+v1sV.y;</span><br><span class="line">            c2.vx=v2tV.x+v2sV.x; c2.vy=v2tV.y+v2sV.y;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CirlcleToWall</span><span class="params">(Circle cirlce)</span> </span>&#123;</span><br><span class="line">        Vector&lt;Integer&gt; vi = <span class="keyword">new</span> Vector&lt;Integer&gt;();</span><br><span class="line">        vi = CheckCircleToWall(cirlce);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(Integer x : vi) &#123;</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">1</span>||x==<span class="number">3</span>) &#123;</span><br><span class="line">               cirlce.vx*=-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">2</span>||x==<span class="number">4</span>) &#123;</span><br><span class="line">               cirlce.vy*=-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">CheckCirlceToCircle</span><span class="params">(Circle c1,Circle c2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(distanceSQ(c1, c2)+eps&lt;(<span class="keyword">double</span>)((c1.r+c2.r)*(c1.r+c2.r)))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 0 no Collison</span></span><br><span class="line">    <span class="comment">/// 1 North 2 East 3 South 4 West</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Vector&lt;Integer&gt; <span class="title">CheckCircleToWall</span><span class="params">(Circle c)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Vector&lt;Integer&gt; ret = <span class="keyword">new</span> Vector&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(c.x+c.r&gt;w+base) &#123;</span><br><span class="line">            ret.add(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c.x-c.r&lt;base) &#123;</span><br><span class="line">            ret.add(<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(c.y+c.r&gt;w+base) &#123;</span><br><span class="line">            ret.add(<span class="number">4</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c.y-c.r&lt;base) &#123;</span><br><span class="line">            ret.add(<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h6 id="2016年第二更…">2016年第二更…</h6><p>最近写了一个模拟两个小球,无能量损失碰撞的java小程序….</p>
<h5 id="介绍_java_绘图的网站"><a href="https://www3.ntu.edu.sg/home/ehchua/p]]>
    </summary>
    
      <category term="java" scheme="http://www.ckboss.cf/tags/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java爬虫简单介绍]]></title>
    <link href="http://www.ckboss.cf/2016/01/12/java%E7%88%AC%E8%99%AB/"/>
    <id>http://www.ckboss.cf/2016/01/12/java爬虫/</id>
    <published>2016-01-11T16:18:46.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<h6 id="2016年第一更…">2016年第一更…</h6><p>上个月写了不少java的爬虫,总结一下常用的java爬虫框架.</p>
<p>试用了两个比较常见的java爬虫相关框架,WebCollector和WebMagic.</p>
<h2 id="Part1_正常向爬虫框架">Part1 正常向爬虫框架</h2><h3 id="WebCollector">WebCollector</h3><hr>
<h6 id="1-_项目主页:WebCollector">1. 项目主页:<a href="https://github.com/CrawlScript/WebCollector" target="_blank" rel="external">WebCollector</a></h6><h6 id="2-_简单的使用方法:">2. 简单的使用方法:</h6><p>扩展一个Crawler类,根据需要重载两个方法即可…</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visit</span><span class="params">(Page page, CrawlDatums next)</span> </span>&#123;</span><br><span class="line">       System.out.println(<span class="string">"visiting:"</span>+page.getUrl()+<span class="string">"\tdepth="</span>+page.getMetaData(<span class="string">"depth"</span>));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>visit 方法用于访问到指定页面时在该页面进行的操作,在这里可以写爬虫的具体的抓取操作.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterVisit</span><span class="params">(Page page, CrawlDatums next)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.afterVisit(page, next); </span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>
<p>默认的 afterVisit 函数处理在找到的页面中将那些URL加入到后续的搜索队列中去,如果有需要可以重写这个函数.</p>
<p>WebCollector 的2.0版本中有一个非常好用的特性,对于每一个datum可以附加一个叫做MetaData的东西,可以用来记录跟随Datum的一些信息比如页面的深度,在一些情况下非常方便.</p>
<p>一个调用示例:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       DemoDepthCrawler crawler=<span class="keyword">new</span> DemoDepthCrawler(<span class="string">"depth_crawler"</span>, <span class="keyword">true</span>);</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">           crawler.addSeed(<span class="keyword">new</span> CrawlDatum(<span class="string">"http://news.hfut.edu.cn/list-1-"</span>+i+<span class="string">".html"</span>)</span><br><span class="line">                   .putMetaData(<span class="string">"depth"</span>, <span class="string">"1"</span>));</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">/*正则规则用于控制爬虫自动解析出的链接，用户手动添加的链接，例如添加的种子、或</span><br><span class="line">         在visit方法中添加到next中的链接并不会参与正则过滤*/</span></span><br><span class="line">       <span class="comment">/*自动爬取类似"http://news.hfut.edu.cn/show-xxxxxxhtml"的链接*/</span></span><br><span class="line">       crawler.addRegex(<span class="string">"http://news.hfut.edu.cn/show-.*html"</span>);</span><br><span class="line">       <span class="comment">/*不要爬取jpg|png|gif*/</span></span><br><span class="line">       crawler.addRegex(<span class="string">"-.*\\.(jpg|png|gif).*"</span>);</span><br><span class="line">       <span class="comment">/*不要爬取包含"#"的链接*/</span></span><br><span class="line">       crawler.addRegex(<span class="string">"-.*#.*"</span>);</span><br><span class="line">       crawler.start(<span class="number">2</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>更多的内容可以取看代码中的example</p>
<h3 id="WebMagic">WebMagic</h3><p><img src="https://camo.githubusercontent.com/77fe3da40f9b2c5839df0267890a2457a64003e0/68747470733a2f2f7261772e6769746875622e636f6d2f636f64653463726166742f7765626d616769632f6d61737465722f6173736574732f6c6f676f2e6a7067" alt="WebMagic"></p>
<hr>
<p>WebMagic是设计的非常好的一个爬虫,如果要使用java编写爬虫那么非常推荐使用.</p>
<p>可惜因为考虑到项目的兼容问题,暂时没有深入的研究这个爬虫.</p>
<p>项目地址: <a href="https://github.com/code4craft/webmagic" target="_blank" rel="external">WebMagic</a></p>
<p>非常齐全的手册: <a href="http://webmagic.io/docs/" target="_blank" rel="external">docs</a></p>
<h2 id="Part2_非主流爬虫">Part2 非主流爬虫</h2><hr>
<p>大部分的爬虫框架都是模拟浏览器的请求,但是很多网站是防爬虫的,或者有很多的不明js等动态网页信息…对于这样的网站可以想办法操作浏览器进行爬取.</p>
<p>在编写爬虫的时候,只要模拟用户的操作就可以了,比如要加载一个js不需要进行任何的分析,模拟操作后wait一下就加载好了.</p>
<p>这种方法的优点是可以有效的反反爬虫,方便的爬去动态内容,缺点也很明显,因为往往在后台需要调用浏览器,所以资源消耗很大,处理速度也很慢,在调用这类浏览器的时候可以考虑关闭图片的加载,css渲染等…</p>
<p>一些可供调用的浏览器…</p>
<h4 id="httpunit"><a href="http://httpunit.sourceforge.net/" target="_blank" rel="external">httpunit</a></h4><p><img src="http://httpunit.sourceforge.net/doc/images/HttpUnit.jpg" alt="httpunit"></p>
<p>httpunit是一个java写的无界面浏览器,通过调用httpunit的api可以模拟浏览器访问网站.</p>
<p><strong>httpunit有个致命的缺点</strong>,它对js支持非常的差,大部分的js都没法正常的解析,暂时不适合用来做解析动态网页的爬虫!!!</p>
<h4 id="phantomjs">phantomjs</h4><p><img src="http://phantomjs.org/img/phantomjs-logo.png" alt=""></p>
<p><a href="http://phantomjs.org/" target="_blank" rel="external">项目主页</a></p>
<p>也是个浏览器,没有提供linux下的安装包,暂时没有试用这个…</p>
<h4 id="selenium">selenium</h4><p><img src="http://www.seleniumhq.org/images/selenium-logo.png" alt=""></p>
<p><a href="http://www.seleniumhq.org/" target="_blank" rel="external">项目主页</a></p>
<p>selenium是一个网站测试工具,可以用来模拟用户的操作,可以支持java,python,c#等对多种语言对浏览器调用.</p>
<p>selenium 在 火狐 上有个叫做 selenium IDE的插件,安装这插件后可以记录用户的操作,并且可以自动生成代码,非常方便.</p>
<p>selenium 支持很多的浏览器包括httpuity,建议调用火狐/谷歌等保证对网页的兼容性.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h6 id="2016年第一更…">2016年第一更…</h6><p>上个月写了不少java的爬虫,总结一下常用的java爬虫框架.</p>
<p>试用了两个比较常见的java爬虫相关框架,WebCollector和WebMagic.</p>
<h2 id="Part1_正常向]]>
    </summary>
    
      <category term="java" scheme="http://www.ckboss.cf/tags/java/"/>
    
      <category term="杂" scheme="http://www.ckboss.cf/categories/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用实时更新的卫星照片做桌面壁纸]]></title>
    <link href="http://www.ckboss.cf/2015/12/10/%E4%BD%BF%E7%94%A8%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0%E7%9A%84%E5%8D%AB%E6%98%9F%E7%85%A7%E7%89%87%E5%81%9A%E6%A1%8C%E9%9D%A2%E5%A3%81%E7%BA%B8/"/>
    <id>http://www.ckboss.cf/2015/12/10/使用实时更新的卫星照片做桌面壁纸/</id>
    <published>2015-12-10T07:44:13.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://www.v2ex.com/t/241563#reply62" target="_blank" rel="external">V2EX里的一篇帖子….</a></p>
<p>抓取日本的向日葵8号卫星每十分钟更新的的地球照片作为桌面壁纸.</p>
<p><img src="https://cloud.githubusercontent.com/assets/6072743/11613290/6af013a8-9c56-11e5-8d7e-553cc8226d5a.png" alt="示意图1"></p>
<p>感觉效果不错就顺手用Python自己做了一个:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">old_md5=<span class="string">''</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line"></span><br><span class="line">    json = requests.get(<span class="string">'http://himawari8.nict.go.jp/img/D531106/latest.json'</span>)</span><br><span class="line">    Md5 = hashlib.md5()</span><br><span class="line">    json = str(json.content).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    Md5.update(json)</span><br><span class="line">    now_md5=Md5.hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> old_md5!=now_md5 :</span><br><span class="line">        old_md5=now_md5</span><br><span class="line"></span><br><span class="line">        url_2=<span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>,<span class="number">30</span>) :</span><br><span class="line">            <span class="keyword">if</span> json[i]==<span class="number">58</span> :</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> json[i]==<span class="number">45</span> <span class="keyword">or</span> json[i]==<span class="number">32</span> :</span><br><span class="line">                url_2=url_2+<span class="string">'/'</span></span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                url_2+=str(json[i]-ord(<span class="string">'0'</span>))</span><br><span class="line">        url_1=<span class="string">'http://himawari8-dl.nict.go.jp/himawari8/img/D531106/thumbnail/550/'</span></span><br><span class="line">        url_3=<span class="string">'_0_0.png'</span></span><br><span class="line">        url = url_1+url_2+url_3</span><br><span class="line">        print(url)</span><br><span class="line"></span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        f = open(<span class="string">'/home/ckboss/Pictures/壁纸/Eath/tt.png'</span>,<span class="string">'bw'</span>)</span><br><span class="line">        f.write(r.content)</span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        time.sleep(<span class="number">300</span>)</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://www.v2ex.com/t/241563#reply62" target="_blank" rel="external">V2EX里的一篇帖子….</a></p>
<p>抓取日本的向日葵8号卫星每十分钟更新的的地球照片作为桌面壁纸.</p]]>
    </summary>
    
      <category term="Python3小玩意" scheme="http://www.ckboss.cf/tags/Python3%E5%B0%8F%E7%8E%A9%E6%84%8F/"/>
    
      <category term="Python3小玩意" scheme="http://www.ckboss.cf/categories/Python3%E5%B0%8F%E7%8E%A9%E6%84%8F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[坑爹freenom随意取消域名]]></title>
    <link href="http://www.ckboss.cf/2015/12/05/%E5%9D%91%E7%88%B9%E7%9A%84freenom%E5%9F%9F%E5%90%8D/"/>
    <id>http://www.ckboss.cf/2015/12/05/坑爹的freenom域名/</id>
    <published>2015-12-04T16:14:34.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>晚上看了下邮箱，发现了这个：</p>
<p><img src="http://ww1.sinaimg.cn/mw1024/50a04a61gw1eyo32a0i1wj20ix0demz2.jpg" alt=""></p>
<p>freenom说我的域名违规,给取消了…..</p>
<p>看了下360监控:<br><img src="http://ww1.sinaimg.cn/mw1024/50a04a61gw1eyo32dn2arj20hf0cc0uf.jpg" alt=""></p>
<p><strong>果然便宜没好货…</strong></p>
<p>网上搜索了下有人也碰到了<a href="http://www.bennythink.com/remember-domain-name-change-controversy.html" target="_blank" rel="external">同样的情况</a></p>
<blockquote>
<p>天底下没有免费的午餐！便宜没好货！请允许我无耻的这样推断：freenom发现我这域名还有不少解析量，于是在恰好注册三个月之后收回域名，逼我一年10美刀买.</p>
</blockquote>
<p>现已修复,如果继续这样的话….<br>马上就会有新的域名了….</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>晚上看了下邮箱，发现了这个：</p>
<p><img src="http://ww1.sinaimg.cn/mw1024/50a04a61gw1eyo32a0i1wj20ix0demz2.jpg" alt=""></p>
<p>freenom说我的域名违规,给取消了…..<]]>
    </summary>
    
      <category term="freenom" scheme="http://www.ckboss.cf/tags/freenom/"/>
    
      <category term="域名" scheme="http://www.ckboss.cf/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="日常" scheme="http://www.ckboss.cf/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[近况2015年11月 ACM退役 和 模版Release]]></title>
    <link href="http://www.ckboss.cf/2015/11/23/%E8%BF%91%E5%86%B5201511/"/>
    <id>http://www.ckboss.cf/2015/11/23/近况201511/</id>
    <published>2015-11-23T05:04:10.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<h4 id="近况:">近况:</h4><h5 id="1-_ACM生涯正式结束了,我这么弱应该就不需要什么退役感言了-">1. ACM生涯正式结束了,我这么弱应该就不需要什么退役感言了.</h5><h5 id="2-_整理了一下模版,放出了第一个v0-1-alpha-1的pre-release…">2. 整理了一下模版,放出了第一个<strong>v0.1-alpha.1的pre-release</strong>…</h5><h5 id="下载地址:_MyAcmTemplate_Nov_23_2015">下载地址:  <a href="https://github.com/CKboss/MyAcmTemplate/releases/tag/v0.1-alpha.1" target="_blank" rel="external">MyAcmTemplate Nov 23 2015</a></h5><h4 id="最近在做什么:">最近在做什么:</h4><h5 id="1-_复习期末考试">1. 复习期末考试</h5><h5 id="2-_学习一下Django框架,顺手写个毕业设计(准备写个VJ)">2. 学习一下Django框架,顺手写个毕业设计(准备写个VJ)</h5><h6 id="PS:_推荐一个Django1-8的入门教程:https://www-youtube-com/watch?v=cvceyNioank_和_这个老外的youtube的主页:">PS: 推荐一个Django1.8的入门教程:<a href="https://www.youtube.com/watch?v=cvceyNioank" target="_blank" rel="external">https://www.youtube.com/watch?v=cvceyNioank</a> 和 <a href="https://www.youtube.com/channel/UCWEHue8kksIaktO8KTTN_zg" target="_blank" rel="external">这个老外的youtube的主页:</a></h6><h4 id="将来做什么:">将来做什么:</h4><p>学习一下 Linux,Unix高级编程,编译原理,Haskell等…<br>以后可能会搞一点 机器学习+数据挖掘 , 然后应用在: 大数据算命上…</p>
<h4 id="博客内容变化:">博客内容变化:</h4><p>会从题解博客转型为技术博客,不过接下来一段时间应该会学习一些基础知识,应该没什么好更新的…</p>
<p>当然过一段时间后,会重新开始刷点题,主战场会换成BZOJ….</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="近况:">近况:</h4><h5 id="1-_ACM生涯正式结束了,我这么弱应该就不需要什么退役感言了-">1. ACM生涯正式结束了,我这么弱应该就不需要什么退役感言了.</h5><h5 id="2-_整理了一下模版,放出了第一个v0-1-alpha-1的pr]]>
    </summary>
    
      <category term="近况" scheme="http://www.ckboss.cf/tags/%E8%BF%91%E5%86%B5/"/>
    
      <category term="日常" scheme="http://www.ckboss.cf/categories/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python3 处理Post操作]]></title>
    <link href="http://www.ckboss.cf/2015/11/20/Python%E5%A1%AB%E5%86%99%E8%A1%A8%E5%8D%95/"/>
    <id>http://www.ckboss.cf/2015/11/20/Python填写表单/</id>
    <published>2015-11-20T15:28:13.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>Python写爬虫的时候经常要填写一些表单,总结了一下POST操作的写法.</p>
<p>首先需要用浏览器找到POST连接,获得POST的数据的格式.</p>
<p>然后编写返回特定格式字典的函数.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> math,string</span><br><span class="line"></span><br><span class="line"><span class="string">'''getPOST_1.py'''</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getData</span><span class="params">()</span>:</span></span><br><span class="line">    D = &#123;</span><br><span class="line">    <span class="string">'selectItem'</span>:<span class="string">'on'</span>,</span><br><span class="line">    <span class="string">'lessonid'</span>:<span class="string">'438'</span>,</span><br><span class="line">    <span class="string">'StartDate'</span>:<span class="string">'2015-8-5 0:00:00'</span>,</span><br><span class="line">    <span class="string">'CityId'</span>:<span class="string">'2'</span>,</span><br><span class="line">    <span class="string">'Days'</span>:<span class="string">'2'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> D</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomChar</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="string">"""用于随机生成汉字"""</span></span><br><span class="line"><span class="decorator">  @staticmethod</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">Unicode</span><span class="params">()</span>:</span></span><br><span class="line">    val = random.randint(<span class="number">0x4E00</span>, <span class="number">0x9FBF</span>)</span><br><span class="line">    <span class="keyword">return</span> chr(val)</span><br><span class="line"></span><br><span class="line"><span class="decorator">  @staticmethod</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">GB2312</span><span class="params">()</span>:</span></span><br><span class="line">    head = random.randint(<span class="number">0xB0</span>, <span class="number">0xCF</span>)</span><br><span class="line">    body = random.randint(<span class="number">0xA</span>, <span class="number">0xF</span>)</span><br><span class="line">    tail = random.randint(<span class="number">0</span>, <span class="number">0xF</span>)</span><br><span class="line">    val = ( head &lt;&lt; <span class="number">8</span> ) | (body &lt;&lt; <span class="number">4</span>) | tail</span><br><span class="line">    str = <span class="string">"%x"</span> % val</span><br><span class="line">    <span class="keyword">return</span> str.decode(<span class="string">'hex'</span>).decode(<span class="string">'gb2312'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPD</span><span class="params">()</span>:</span></span><br><span class="line">    D = getData()</span><br><span class="line">    <span class="keyword">return</span> D</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        print(getPD())</span><br></pre></td></tr></table></figure>
<p>最后模拟浏览器发出请求,就可以了<br>注意:跑多线程的话很容易把小网站跑挂….</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse,urllib.request,http.cookiejar</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> getPOST_1</span><br><span class="line"></span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetUrlRequest</span><span class="params">(Url,StrPostData)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        postdata=urllib.parse.urlencode(StrPostData)</span><br><span class="line">        postdata=postdata.encode(encoding=<span class="string">'UTF8'</span>)</span><br><span class="line">        header=&#123;<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Linux; Android 4.3; zh-cn; SAMSUNG-SM-G3518_TD Android/4.3 Release/11.15.2013 Browser/AppleWebKit537.36 Build/JSS15J) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Mobile Safari/537.36'</span>&#125;</span><br><span class="line">        req= urllib.request.Request(</span><br><span class="line">            url = Url,</span><br><span class="line">            data = postdata,</span><br><span class="line">            headers = header)</span><br><span class="line">        ret = urllib.request.urlopen(req)</span><br><span class="line">        print(ret.read().decode(<span class="string">"UTF8"</span>))</span><br><span class="line">        print(<span class="string">'---&gt; '</span>+str(cnt))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'can\'t connect'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Url = <span class="string">'http://www.xxxxx.com/'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gao</span><span class="params">()</span>:</span></span><br><span class="line">    GetUrlRequest(Url,getPOST_1.getPD())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">20</span>):</span><br><span class="line">        cnt+=<span class="number">1</span></span><br><span class="line">        threads.append(threading.Thread(target=gao))</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</span><br><span class="line">        t.start()</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>Python写爬虫的时候经常要填写一些表单,总结了一下POST操作的写法.</p>
<p>首先需要用浏览器找到POST连接,获得POST的数据的格式.</p>
<p>然后编写返回特定格式字典的函数.</p>
<figure class="highlight python">]]>
    </summary>
    
      <category term="Python3小玩意" scheme="http://www.ckboss.cf/tags/Python3%E5%B0%8F%E7%8E%A9%E6%84%8F/"/>
    
      <category term="Python3小玩意" scheme="http://www.ckboss.cf/categories/Python3%E5%B0%8F%E7%8E%A9%E6%84%8F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MailGun API发送电子邮件]]></title>
    <link href="http://www.ckboss.cf/2015/11/20/SPAM-Python/"/>
    <id>http://www.ckboss.cf/2015/11/20/SPAM-Python/</id>
    <published>2015-11-20T14:51:17.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://e45a551211fc56cb40b0-7d31421b6f9e7cf93475b75027a9bfbb.ssl.cf2.rackcdn.com/e6c50080e48828348b948be33d5efdb232a25789/images/mailgun.svg" alt="MailGun"></p>
<h5 id="Python是一门简单又功能强大的脚本语言…-">Python是一门简单又功能强大的脚本语言….</h5><h5 id="配合MailGun提供的API,则可以轻松组装成一把威力强大的MailGun-">配合MailGun提供的API,则可以轻松组装成一把威力强大的<em>MailGun</em>.</h5><h5 id="MailGun官网"><a href="https://www.mailgun.com/" target="_blank" rel="external">MailGun官网</a></h5><p>MailGun提供电子邮件发送的API,免费账号可以每月发送10000封邮件,不验证域名的话每天限量300封</p>
<p>注册账号后就会提供两个可以调用的API,调用方式非常简单如下:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_simple_message</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> requests.post(</span><br><span class="line">        <span class="string">"https://api.mailgun.net/v3/sandboxxxxxxxxxxxx.mailgun.org/messages"</span>,</span><br><span class="line">        auth=(<span class="string">"api"</span>, <span class="string">"key-ccxxxxxxxxxxxxxxxxxx"</span>),</span><br><span class="line">        data=&#123;<span class="string">"from"</span>: <span class="string">"TestSender &lt;justaTest@tt.com&gt;"</span>,</span><br><span class="line">              <span class="string">"to"</span>: <span class="string">"X &lt;xxxxx@sina.com&gt;"</span>,</span><br><span class="line">              <span class="string">"subject"</span>: <span class="string">"Just a Test"</span>,</span><br><span class="line">              <span class="string">"text"</span>: <span class="string">"rt Just a Test"</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_smtp_message</span><span class="params">()</span>:</span></span><br><span class="line">    msg = MIMEText(<span class="string">'Testing some Mailgun awesomness'</span>)</span><br><span class="line">    msg[<span class="string">'Subject'</span>] = <span class="string">"Hello"</span></span><br><span class="line">    msg[<span class="string">'From'</span>]    = <span class="string">"foo@tt.cc"</span></span><br><span class="line">    msg[<span class="string">'To'</span>]      = <span class="string">"xxxxx@sina.com"</span></span><br><span class="line"></span><br><span class="line">    s = smtplib.SMTP(<span class="string">'smtp.mailgun.org'</span>, XXX)</span><br><span class="line"></span><br><span class="line">    s.login(<span class="string">'postmaster@sandboxbxxxxxxxxxxxxxx.mailgun.org'</span>, <span class="string">'xxxxxxxxxxxxxxxxx'</span>) </span><br><span class="line">	<span class="comment">#填自己的账号和密码</span></span><br><span class="line">    s.sendmail(msg[<span class="string">'From'</span>], msg[<span class="string">'To'</span>], msg.as_string())</span><br><span class="line">    s.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    send_simple_message()</span><br><span class="line">    send_smtp_message()</span><br></pre></td></tr></table></figure>
<p>以上就大功告成了,可以发送邮件测试一下.</p>
<p><img src="http://ww2.sinaimg.cn/mw1024/50a04a61gw1ey7uhjz32tj20xh0dbq6a.jpg" alt=""></p>
<p><del>电子邮件的寄信人是可以随意伪造的,真的可以做一把SpamGun哦</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://e45a551211fc56cb40b0-7d31421b6f9e7cf93475b75027a9bfbb.ssl.cf2.rackcdn.com/e6c50080e48828348b948be33d5efdb232a25789/imag]]>
    </summary>
    
      <category term="Python3小玩意" scheme="http://www.ckboss.cf/tags/Python3%E5%B0%8F%E7%8E%A9%E6%84%8F/"/>
    
      <category term="Python3小玩意" scheme="http://www.ckboss.cf/categories/Python3%E5%B0%8F%E7%8E%A9%E6%84%8F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDOJ 4756 Install Air Conditioning 次小生成树]]></title>
    <link href="http://www.ckboss.cf/2015/11/08/HDOJ4756/"/>
    <id>http://www.ckboss.cf/2015/11/08/HDOJ4756/</id>
    <published>2015-11-08T15:21:53.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>简单次小生成树,根据题目需求计算即可.</p>
<h1 id="Install_Air_Conditioning"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4756" target="_blank" rel="external">Install Air Conditioning</a></h1><p>Time Limit: 4000/2000 MS (Java/Others)    Memory Limit: 65535/65535 K (Java/Others)<br>Total Submission(s): 1230    Accepted Submission(s): 288</p>
<h5 id="Problem_Description">Problem Description</h5><p><img src="http://acm.hdu.edu.cn/data/images/C479-1009-1.jpg" alt=""></p>
<p>  NJUST carries on the tradition of HaJunGong. NJUST, who keeps up the ”people-oriented, harmonious development” of the educational philosophy and develops the ”unity, dedication, truth-seeking, innovation” school motto, has now become an engineering-based, multidisciplinary university.</p>
<p>  As we all know, Nanjing is one of the four hottest cities in China. Students in NJUST find it hard to fall asleep during hot summer every year. They will never, however, suffer from that hot this year, which makes them really excited. NJUST’s 60th birthday is approaching, in the meantime, 50 million is spent to install air conditioning among students dormitories. Due to NJUST’s long history, the old circuits are not capable to carry heavy load, so it is necessary to set new high-load wires. To reduce cost, every wire between two dormitory is considered a segment. Now, known about all the location of dormitories and a power plant, and the cost of high-load wire per meter, Tom200 wants to know in advance, under the premise of all dormitories being able to supply electricity, the minimum cost be spent on high-load wires. And this is the minimum strategy. But Tom200 is informed that there are so many wires between two specific dormitories that we cannot set a new high-load wire between these two, otherwise it may have potential risks. The problem is that Tom200 doesn’t know exactly which two dormitories until the setting process is started. So according to the minimum strategy described above, how much cost at most you’ll spend?</p>
<h5 id="Input">Input</h5><p>  The first line of the input contains a single integer T(T ≤ 100), the number of test cases.<br>  For each case, the first line contains two integers n(3 ≤ n ≤ 1000), k(1 ≤ k ≤ 100). n represents n-1 dormitories and one power plant, k represents the cost of high-load wire per meter. n lines followed contains two integers x, y(0 ≤ x, y ≤ 10000000), representing the location of dormitory or power plant. Assume no two locations are the same, and no three locations are on a straight line. The first one is always the location of the power plant.</p>
<h5 id="Output">Output</h5><p>  For each case, output the cost, correct to two decimal places.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">9.66</span></span><br><span class="line"><span class="number">9.00</span></span><br></pre></td></tr></table></figure>
<h5 id="Source">Source</h5><p>2013 ACM/ICPC Asia Regional Nanjing Online</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">Author        :CKboss</span><br><span class="line">Created Time  :2015年11月08日 星期日 21时41分40秒</span><br><span class="line">File Name     :HDOJ4756.cpp</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> inf=<span class="number">1e20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Edge</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> to,next;</span><br><span class="line">    <span class="keyword">double</span> cost;</span><br><span class="line">&#125;edge[maxn*maxn*<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Adj[maxn],Size;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_edge</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(Adj,-<span class="number">1</span>,<span class="keyword">sizeof</span>(Adj)); Size=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_Edge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">double</span> cost)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    edge[Size].to=v;</span><br><span class="line">    edge[Size].cost=cost;</span><br><span class="line">    edge[Size].next=Adj[u];</span><br><span class="line">    Adj[u]=Size++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Point</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">&#125;pt[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> Valu;</span><br><span class="line"><span class="keyword">double</span> G[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getDist</span><span class="params">(Point a,Point b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">double</span> dist[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Prime</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxn;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        vis[i]=<span class="literal">false</span>;</span><br><span class="line">        dist[i]=inf; pre[i]=i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dist[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mark=-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">double</span> mindist=inf;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j]&amp;&amp;dist[j]&lt;mindist)</span><br><span class="line">            &#123;</span><br><span class="line">                mindist=dist[j];</span><br><span class="line">                mark=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mark==-<span class="number">1</span>) <span class="keyword">return</span> inf;</span><br><span class="line">        sum+=mindist; vis[mark]=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!vis[j]&amp;&amp;G[mark][j]&lt;dist[j])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[j]=G[mark][j];</span><br><span class="line">                pre[j]=mark;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    init_edge();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==pre[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">double</span> L=G[i][pre[i]];</span><br><span class="line">        Add_Edge(i,pre[i],L); Add_Edge(pre[i],i,L);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> dp[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> P,<span class="keyword">int</span> u,<span class="keyword">int</span> fa,<span class="keyword">int</span> deep)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ret=inf;</span><br><span class="line">    <span class="keyword">if</span>(deep!=<span class="number">1</span>) ret=G[u][P];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Adj[u];~i;i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> tt=dfs(P,v,u,deep+<span class="number">1</span>);</span><br><span class="line">        ret=min(ret,tt);</span><br><span class="line"></span><br><span class="line">        dp[u][v]=dp[v][u]=min(dp[u][v],tt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pre_Gao</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n;j++)</span><br><span class="line">            dp[i][j]=inf;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) dfs(i,i,-<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> T_T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T_T);</span><br><span class="line">    <span class="keyword">while</span>(T_T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%lf"</span>,&amp;n,&amp;Valu);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> x,y;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);</span><br><span class="line">            pt[i].x=x; pt[i].y=y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            G[i][i]=inf;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                G[i][j]=G[j][i]=getDist(pt[i],pt[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> mst=Prime();</span><br><span class="line">        <span class="keyword">double</span> deta=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        Pre_Gao();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">0</span>;u&lt;n;u++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=Adj[u];~j;j=edge[j].next)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> v=edge[j].to;</span><br><span class="line">                <span class="keyword">if</span>(v&lt;u) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(u==<span class="number">0</span>||v==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                deta=max(deta,dp[u][v]-G[u][v]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,(mst+deta)*Valu);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>简单次小生成树,根据题目需求计算即可.</p>
<h1 id="Install_Air_Conditioning"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4756">Install Air Conditioning</a></h1><p>Time Limit: 4000/2000 MS (Java/Others)    Memory Limit: 65535/65535 K (Java/Others)<br>Total Submission(s): 1230    Accepted Submission(s): 288</p>
<h5 id="Problem_Description">Problem Description</h5><p><img src="http://acm.hdu.edu.cn/data/images/C479-1009-1.jpg" alt=""></p>
<p>  NJUST carries on the tradition of HaJunGong. NJUST, who keeps up the ”people-oriented, harmonious development” of the educational philosophy and develops the ”unity, dedication, truth-seeking, innovation” school motto, has now become an engineering-based, multidisciplinary university.</p>
<p>  As we all know, Nanjing is one of the four hottest cities in China. Students in NJUST find it hard to fall asleep during hot summer every year. They will never, however, suffer from that hot this year, which makes them really excited. NJUST’s 60th birthday is approaching, in the meantime, 50 million is spent to install air conditioning among students dormitories. Due to NJUST’s long history, the old circuits are not capable to carry heavy load, so it is necessary to set new high-load wires. To reduce cost, every wire between two dormitory is considered a segment. Now, known about all the location of dormitories and a power plant, and the cost of high-load wire per meter, Tom200 wants to know in advance, under the premise of all dormitories being able to supply electricity, the minimum cost be spent on high-load wires. And this is the minimum strategy. But Tom200 is informed that there are so many wires between two specific dormitories that we cannot set a new high-load wire between these two, otherwise it may have potential risks. The problem is that Tom200 doesn’t know exactly which two dormitories until the setting process is started. So according to the minimum strategy described above, how much cost at most you’ll spend?</p>
<h5 id="Input">Input</h5><p>  The first line of the input contains a single integer T(T ≤ 100), the number of test cases.<br>  For each case, the first line contains two integers n(3 ≤ n ≤ 1000), k(1 ≤ k ≤ 100). n represents n-1 dormitories and one power plant, k represents the cost of high-load wire per meter. n lines followed contains two integers x, y(0 ≤ x, y ≤ 10000000), representing the location of dormitory or power plant. Assume no two locations are the same, and no three locations are on a straight line. The first one is always the location of the power plant.</p>
<h5 id="Output">Output</h5><p>  For each case, output the cost, correct to two decimal places.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">3</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">9.66</span></span><br><span class="line"><span class="number">9.00</span></span><br></pre></td></tr></table></figure>
<h5 id="Source">Source</h5><p>2013 ACM/ICPC Asia Regional Nanjing Online</p>]]>
    
    </summary>
    
      <category term="次小生成树" scheme="http://www.ckboss.cf/tags/%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
      <category term="acm_图论" scheme="http://www.ckboss.cf/categories/acm-%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDOJ 4609 3-idiots FFT+组合数]]></title>
    <link href="http://www.ckboss.cf/2015/11/08/HDOJ4609/"/>
    <id>http://www.ckboss.cf/2015/11/08/HDOJ4609/</id>
    <published>2015-11-08T12:15:51.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>FFT+组合数,结果又遭遇了莫名奇妙的WA,重写又提交15+后终于过了.</p>
<h5 id="题意:">题意:</h5><p>给n个数,随机的选择3个数.问能构成三角形的概率是多少.</p>
<h5 id="解:">解:</h5><p>既求有多少种方法可以构成三角形.<br>可以枚举两个边的和,再来看第三边,由于n比较大,所以用FFT来计算出所有可能的和(感觉类似母函数).</p>
<p>比如对于输入 1 3 3 4,对应的多项式为:</p>
<p>$f = x^4+2 x^3+x^4$<br>则:<br>$f * f = x^8+4 x^7+4 x^6+2 x^5+4 x^4+x^2$</p>
<p>这个可以用FFT算,表示在f中可以重复的选两个数可以组成1个2,4个4,2个5,4个6,4个7,1个8</p>
<ul>
<li><p>因为不能有一个数被减去两次,所以需要将指数等于a[i]*2的项减小１．</p>
</li>
<li><p>因为取的两个数没有顺序的区别，所以所有的系数都要除以２．</p>
</li>
<li><p>用sum数组来累加前缀和.</p>
</li>
</ul>
<p>对于某一个数设为x(假设数组已经排序,x在数组的第i位上,比x小的边既在x前面的边,比x大的既在x后面的边),下面来计算选择x做为所在三角形的最长的边,有多少种不同的三角形.</p>
<ol>
<li>有$D=sum[len]-sum[x]$种两边的和是可以大于$x$的,但是这些情况中包含了很多不合法的情况</li>
<li>考虑到$x$为三角形中的最长边,在$D$中有$A=n-1$种情况,所选的两条边中包含了$x$</li>
<li>同理,在$D$中有$B=(n-i-1)*i$种情况,所选的两条边是一个比$x$大的边(位置靠后)和一个比$x$小的(位置靠前)边</li>
<li>在D中有$C=(n-i-1)*(n-i-2)/2$种情况,所选的两条边都比$x$大(位置靠后)</li>
<li>x所能贡献的三角形个数为: $D-A-B-C$</li>
</ol>
<p>可以在$O(n)$的时间内统计出答案</p>
<h1 id="3-idiots"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4609" target="_blank" rel="external">3-idiots</a></h1><p>Time Limit: 10000/5000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)<br>Total Submission(s): 3233    Accepted Submission(s): 1114</p>
<h5 id="Problem_Description">Problem Description</h5><p>King OMeGa catched three men who had been streaking in the street. Looking as idiots though, the three men insisted that it was a kind of performance art, and begged the king to free them. Out of hatred to the real idiots, the king wanted to check if they were lying. The three men were sent to the king’s forest, and each of them was asked to pick a branch one after another. If the three branches they bring back can form a triangle, their math ability would save them. Otherwise, they would be sent into jail.<br>However, the three men were exactly idiots, and what they would do is only to pick the branches randomly. Certainly, they couldn’t pick the same branch - but the one with the same length as another is available. Given the lengths of all branches in the forest, determine the probability that they would be saved.</p>
<h5 id="Input">Input</h5><p>An integer T(T≤100) will exist in the first line of input, indicating the number of test cases.<br>Each test case begins with the number of branches N(3≤N≤105).<br>The following line contains N integers a_i (1≤a_i≤105), which denotes the length of each branch, respectively.</p>
<h5 id="Output">Output</h5><p>Output the probability that their branches can form a triangle, in accuracy of 7 decimal places.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">0.5000000</span></span><br><span class="line"><span class="number">1.0000000</span></span><br></pre></td></tr></table></figure>
<h5 id="Source">Source</h5><p>2013 Multi-University Training Contest 1</p>
<a id="more"></a>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">/* ***********************************************</span><br><span class="line">Author        :CKboss</span><br><span class="line">Created Time  :2015年11月08日 星期日 16时41分24秒</span><br><span class="line">File Name     :HDOJ4609.cpp</span><br><span class="line">************************************************ */</span><br><span class="line"></span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">/*********************FFT************************/</span><br><span class="line"></span><br><span class="line">const double PI=acos(-1.0);</span><br><span class="line"></span><br><span class="line">struct Complex </span><br><span class="line">&#123;</span><br><span class="line">    double x,y;</span><br><span class="line">    Complex(double _x=0,double _y=0):x(_x),y(_y)&#123;&#125;</span><br><span class="line">    Complex operator + (const Complex &amp;b) const</span><br><span class="line">    &#123;</span><br><span class="line">        return Complex(x+b.x,y+b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Complex operator - (const Complex &amp;b) const</span><br><span class="line">    &#123;</span><br><span class="line">        return Complex(x-b.x,y-b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Complex operator * (const Complex &amp;b) const</span><br><span class="line">    &#123;</span><br><span class="line">        return Complex(x*b.x-y*b.y,x*b.y+y*b.x);</span><br><span class="line">    &#125;</span><br><span class="line">    void toString()</span><br><span class="line">    &#123;</span><br><span class="line">        printf("%.2lf + %.2lf i\n",x,y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">void change(Complex y[],int len)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j,k;</span><br><span class="line">    for(i=1,j=len/2;i&lt;len-1;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(i&lt;j) swap(y[i],y[j]);</span><br><span class="line">        k=len/2;</span><br><span class="line">        while(j&gt;=k)</span><br><span class="line">        &#123;</span><br><span class="line">            j-=k; k/=2;</span><br><span class="line">        &#125;</span><br><span class="line">        if(j&lt;k) j+=k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void fft(Complex y[],int len,int on)</span><br><span class="line">&#123;</span><br><span class="line">    change(y,len);</span><br><span class="line">    for(int h=2;h&lt;=len;h&lt;&lt;=1)</span><br><span class="line">    &#123;</span><br><span class="line">        Complex wn(cos(-on*2*PI/h),sin(-on*2*PI/h));</span><br><span class="line">        for(int j=0;j&lt;len;j+=h)</span><br><span class="line">        &#123;</span><br><span class="line">            Complex w(1,0);</span><br><span class="line">            for(int k=j;k&lt;j+h/2;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                Complex u=y[k];</span><br><span class="line">                Complex t=w*y[k+h/2];</span><br><span class="line">                y[k]=u+t;</span><br><span class="line">                y[k+h/2]=u-t;</span><br><span class="line">                w=w*wn;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(on==-1)</span><br><span class="line">    &#123;</span><br><span class="line">        for(int i=0;i&lt;len;i++) y[i].x/=len;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/************************************************/</span><br><span class="line"></span><br><span class="line">typedef long long int LL;</span><br><span class="line"></span><br><span class="line">const int maxn=840000;</span><br><span class="line"></span><br><span class="line">Complex cx[maxn];</span><br><span class="line">LL xi[maxn];</span><br><span class="line">LL cnt[maxn];</span><br><span class="line">LL sum[maxn];</span><br><span class="line">int len,n,a[maxn];</span><br><span class="line"></span><br><span class="line">void init()</span><br><span class="line">&#123;</span><br><span class="line">    memset(cnt,0,sizeof(cnt));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    //freopen("in.txt","r",stdin);</span><br><span class="line">    //freopen("out.txt","w",stdout);</span><br><span class="line"></span><br><span class="line">    int T_T;</span><br><span class="line">    scanf("%d",&amp;T_T);</span><br><span class="line">    while(T_T--)</span><br><span class="line">    &#123;</span><br><span class="line">        init();</span><br><span class="line">        scanf("%d",&amp;n);</span><br><span class="line">        for(int i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf("%d",a+i);</span><br><span class="line">            cnt[a[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+n);</span><br><span class="line">        len=1; int len1=a[n-1]+1;</span><br><span class="line">        while(len&lt;len1*2) len=len*2;</span><br><span class="line"></span><br><span class="line">        for(int i=0;i&lt;len1;i++)</span><br><span class="line">            cx[i]=Complex(cnt[i],0);</span><br><span class="line">        for(int i=len1;i&lt;len;i++)</span><br><span class="line">            cx[i]=Complex(0,0);</span><br><span class="line"></span><br><span class="line">        fft(cx,len,1); </span><br><span class="line">        for(int i=0;i&lt;len;i++) cx[i]=cx[i]*cx[i];</span><br><span class="line">        fft(cx,len,-1);</span><br><span class="line"></span><br><span class="line">        for(int i=0;i&lt;len;i++)</span><br><span class="line">            xi[i]=(LL)(cx[i].x+0.5);</span><br><span class="line"></span><br><span class="line">        len=2*a[n-1];</span><br><span class="line"></span><br><span class="line">        for(int i=0;i&lt;n;i++)</span><br><span class="line">            xi[a[i]+a[i]]--;</span><br><span class="line"></span><br><span class="line">        sum[0]=0;</span><br><span class="line">        for(int i=1;i&lt;=len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            xi[i]/=2;</span><br><span class="line">            sum[i]=sum[i-1]+xi[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        LL ans=0;</span><br><span class="line">        for(int i=0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=sum[len]-sum[a[i]];</span><br><span class="line"></span><br><span class="line">            ans-=(LL)(n-1-i)*i;</span><br><span class="line">            ans-=(LL)(n-1-i)*(n-2-i)/2;</span><br><span class="line">            ans-=n-1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        LL tot=(LL)n*(n-1)*(n-2)/6;</span><br><span class="line">        printf("%.7lf\n",(double)ans/tot);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>FFT+组合数,结果又遭遇了莫名奇妙的WA,重写又提交15+后终于过了.</p>
<h5 id="题意:">题意:</h5><p>给n个数,随机的选择3个数.问能构成三角形的概率是多少.</p>
<h5 id="解:">解:</h5><p>既求有多少种方法可以构成三角形.<br>可以枚举两个边的和,再来看第三边,由于n比较大,所以用FFT来计算出所有可能的和(感觉类似母函数).</p>
<p>比如对于输入 1 3 3 4,对应的多项式为:</p>
<p>$f = x^4+2 x^3+x^4$<br>则:<br>$f * f = x^8+4 x^7+4 x^6+2 x^5+4 x^4+x^2$</p>
<p>这个可以用FFT算,表示在f中可以重复的选两个数可以组成1个2,4个4,2个5,4个6,4个7,1个8</p>
<ul>
<li><p>因为不能有一个数被减去两次,所以需要将指数等于a[i]*2的项减小１．</p>
</li>
<li><p>因为取的两个数没有顺序的区别，所以所有的系数都要除以２．</p>
</li>
<li><p>用sum数组来累加前缀和.</p>
</li>
</ul>
<p>对于某一个数设为x(假设数组已经排序,x在数组的第i位上,比x小的边既在x前面的边,比x大的既在x后面的边),下面来计算选择x做为所在三角形的最长的边,有多少种不同的三角形.</p>
<ol>
<li>有$D=sum[len]-sum[x]$种两边的和是可以大于$x$的,但是这些情况中包含了很多不合法的情况</li>
<li>考虑到$x$为三角形中的最长边,在$D$中有$A=n-1$种情况,所选的两条边中包含了$x$</li>
<li>同理,在$D$中有$B=(n-i-1)*i$种情况,所选的两条边是一个比$x$大的边(位置靠后)和一个比$x$小的(位置靠前)边</li>
<li>在D中有$C=(n-i-1)*(n-i-2)/2$种情况,所选的两条边都比$x$大(位置靠后)</li>
<li>x所能贡献的三角形个数为: $D-A-B-C$</li>
</ol>
<p>可以在$O(n)$的时间内统计出答案</p>
<h1 id="3-idiots"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4609">3-idiots</a></h1><p>Time Limit: 10000/5000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)<br>Total Submission(s): 3233    Accepted Submission(s): 1114</p>
<h5 id="Problem_Description">Problem Description</h5><p>King OMeGa catched three men who had been streaking in the street. Looking as idiots though, the three men insisted that it was a kind of performance art, and begged the king to free them. Out of hatred to the real idiots, the king wanted to check if they were lying. The three men were sent to the king’s forest, and each of them was asked to pick a branch one after another. If the three branches they bring back can form a triangle, their math ability would save them. Otherwise, they would be sent into jail.<br>However, the three men were exactly idiots, and what they would do is only to pick the branches randomly. Certainly, they couldn’t pick the same branch - but the one with the same length as another is available. Given the lengths of all branches in the forest, determine the probability that they would be saved.</p>
<h5 id="Input">Input</h5><p>An integer T(T≤100) will exist in the first line of input, indicating the number of test cases.<br>Each test case begins with the number of branches N(3≤N≤105).<br>The following line contains N integers a_i (1≤a_i≤105), which denotes the length of each branch, respectively.</p>
<h5 id="Output">Output</h5><p>Output the probability that their branches can form a triangle, in accuracy of 7 decimal places.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">0.5000000</span></span><br><span class="line"><span class="number">1.0000000</span></span><br></pre></td></tr></table></figure>
<h5 id="Source">Source</h5><p>2013 Multi-University Training Contest 1</p>]]>
    
    </summary>
    
      <category term="FFT" scheme="http://www.ckboss.cf/tags/FFT/"/>
    
      <category term="acm_数论" scheme="http://www.ckboss.cf/categories/acm-%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDOJ 1402 A * B Problem Plus FFT乘法]]></title>
    <link href="http://www.ckboss.cf/2015/11/08/HDOJ1402/"/>
    <id>http://www.ckboss.cf/2015/11/08/HDOJ1402/</id>
    <published>2015-11-08T02:53:38.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p><strong>fft乘法…</strong></p>
<h1 id="A_*_B_Problem_Plus"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1402" target="_blank" rel="external">A * B Problem Plus</a></h1><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 15703    Accepted Submission(s): 3110</p>
<h5 id="Problem_Description">Problem Description</h5><p>Calculate A * B.</p>
<h5 id="Input">Input</h5><p>Each line will contain two integers A and B. Process to end of file.</p>
<p>Note: the length of each integer will not exceed 50000.</p>
<h5 id="Output">Output</h5><p>For each case, output A * B in one line.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1000</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2000</span></span><br></pre></td></tr></table></figure>
<h5 id="Author">Author</h5><p>DOOM III</p>
<a id="more"></a>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">/* ***********************************************</span><br><span class="line">Author        :CKboss</span><br><span class="line">Created Time  :2015年11月08日 星期日 10时10分45秒</span><br><span class="line">File Name     :fft.cpp</span><br><span class="line">************************************************ */</span><br><span class="line"></span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const double PI = acos(-1.0);</span><br><span class="line"></span><br><span class="line">struct Complex</span><br><span class="line">&#123;</span><br><span class="line">    double x,y;</span><br><span class="line">    Complex(double _x=0.0,double _y=0.0):x(_x),y(_y) &#123;&#125;</span><br><span class="line">    Complex operator - (const Complex &amp;b) const &#123;</span><br><span class="line">        return Complex(x-b.x,y-b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Complex operator + (const Complex &amp;b) const &#123;</span><br><span class="line">        return Complex(x+b.x,y+b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Complex operator * (const Complex &amp;b) const &#123;</span><br><span class="line">        return Complex(x*b.x-y*b.y,x*b.y+y*b.x);</span><br><span class="line">    &#125;</span><br><span class="line">    Complex operator / (const Complex &amp;b) const &#123;</span><br><span class="line">        double D=b.x*b.x+b.y*b.y;</span><br><span class="line">        return Complex((x*b.x+y*b.y)/D,(x*b.y-y*b.x)/D);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/// len 必须取2的幂</span><br><span class="line">void change(Complex y[],int len)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j,k;</span><br><span class="line">    for(i=1,j=len/2;i&lt;len-1;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(i&lt;j) swap(y[i],y[j]);</span><br><span class="line">        k=len/2;</span><br><span class="line">        while(j&gt;=k)</span><br><span class="line">        &#123;</span><br><span class="line">            j-=k; k/=2;</span><br><span class="line">        &#125;</span><br><span class="line">        if(j&lt;k) j+=k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//on==1 DFT on==-1 IDFT</span><br><span class="line">void fft(Complex y[],int len,int on)</span><br><span class="line">&#123;</span><br><span class="line">    change(y,len);</span><br><span class="line">    for(int h=2;h&lt;=len;h&lt;&lt;=1)</span><br><span class="line">    &#123;</span><br><span class="line">        Complex wn(cos(-on*2*PI/h),sin(-on*2*PI/h));</span><br><span class="line">        for(int j=0;j&lt;len;j+=h)</span><br><span class="line">        &#123;</span><br><span class="line">            Complex w(1,0);</span><br><span class="line">            for(int k=j;k&lt;j+h/2;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                Complex u=y[k];</span><br><span class="line">                Complex t=w*y[k+h/2];</span><br><span class="line">                y[k]=u+t;</span><br><span class="line">                y[k+h/2]=u-t;</span><br><span class="line">                w=w*wn;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(on==-1)</span><br><span class="line">    &#123;</span><br><span class="line">        for(int i=0;i&lt;len;i++) y[i].x/=len;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const int maxn=100010;</span><br><span class="line">Complex x1[maxn*2],x2[maxn*2];</span><br><span class="line">char str1[maxn],str2[maxn];</span><br><span class="line">int sum[maxn*2];</span><br><span class="line"></span><br><span class="line">int len1,len2,len;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    //freopen("in.txt","r",stdin);</span><br><span class="line">    //freopen("out.txt","w",stdout);</span><br><span class="line"></span><br><span class="line">    while(scanf("%s%s",str1,str2)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        len1=strlen(str1); len2=strlen(str2);</span><br><span class="line">        len=1;</span><br><span class="line">        while(len&lt;len1*2||len&lt;len2*2) len&lt;&lt;=1;</span><br><span class="line"></span><br><span class="line">        for(int i=0;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(i&lt;len1) x1[i]=Complex(str1[len1-1-i]-'0',0);</span><br><span class="line">            else x1[i]=Complex(0,0);</span><br><span class="line"></span><br><span class="line">            if(i&lt;len2) x2[i]=Complex(str2[len2-1-i]-'0',0);</span><br><span class="line">            else x2[i]=Complex(0,0);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fft(x1,len,1);</span><br><span class="line">        fft(x2,len,1);</span><br><span class="line"></span><br><span class="line">        for(int i=0;i&lt;len;i++) x1[i]=x1[i]*x2[i];</span><br><span class="line"></span><br><span class="line">        fft(x1,len,-1);</span><br><span class="line"></span><br><span class="line">        for(int i=0;i&lt;len;i++)</span><br><span class="line">            sum[i]=(int)(x1[i].x+0.5);</span><br><span class="line"></span><br><span class="line">        for(int i=0;i&lt;len;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum[i+1]+=sum[i]/10;</span><br><span class="line">            sum[i]%=10;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        len=len1+len2-1;</span><br><span class="line">        while(sum[len]&lt;=0&amp;&amp;len&gt;0) len--;</span><br><span class="line">        for(int i=len;i&gt;=0;i--) putchar(sum[i]+'0');</span><br><span class="line">        putchar(10);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>fft乘法…</strong></p>
<h1 id="A_*_B_Problem_Plus"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1402">A * B Problem Plus</a></h1><p>Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)<br>Total Submission(s): 15703    Accepted Submission(s): 3110</p>
<h5 id="Problem_Description">Problem Description</h5><p>Calculate A * B.</p>
<h5 id="Input">Input</h5><p>Each line will contain two integers A and B. Process to end of file.</p>
<p>Note: the length of each integer will not exceed 50000.</p>
<h5 id="Output">Output</h5><p>For each case, output A * B in one line.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">1000</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2000</span></span><br></pre></td></tr></table></figure>
<h5 id="Author">Author</h5><p>DOOM III</p>]]>
    
    </summary>
    
      <category term="FFT" scheme="http://www.ckboss.cf/tags/FFT/"/>
    
      <category term="acm_数论" scheme="http://www.ckboss.cf/categories/acm-%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CodeForces 592D. Super M 树的直径+树DP]]></title>
    <link href="http://www.ckboss.cf/2015/11/07/CF592D/"/>
    <id>http://www.ckboss.cf/2015/11/07/CF592D/</id>
    <published>2015-11-07T12:19:37.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<h5 id="题目大意:">题目大意:</h5><p>给一棵树,和树上的一些需要到达的点,你可以选择一个点为起点,沿着树到达其他需要到达的点.问所需走的最小距离是多少.</p>
<h5 id="解:">解:</h5><p>设一个最小子树T包含了所有需要到达的点,则所需要走的最小距离是T的边数和减去T的直径.T可以由树形DP求得.</p>
<h1 id="D-_Super_M"><a href="http://codeforces.com/problemset/problem/592/D" target="_blank" rel="external">D. Super M</a></h1><p>time limit per test2 seconds<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output</p>
<p>Ari the monster is not an ordinary monster. She is the hidden identity of Super M, the Byteforces’ superhero. Byteforces is a country that consists of n cities, connected by n - 1 bidirectional roads. Every road connects exactly two distinct cities, and the whole road system is designed in a way that one is able to go from any city to any other city using only the given roads. There are m cities being attacked by humans. So Ari… we meant Super M have to immediately go to each of the cities being attacked to scare those bad humans. Super M can pass from one city to another only using the given roads. Moreover, passing through one road takes her exactly one kron - the time unit used in Byteforces.</p>
<p><img src="http://codeforces.com/predownloaded/c1/cd/c1cdef520cd33dff0147d2448dc127d9dbe51bab.png" alt=""></p>
<p>However, Super M is not on Byteforces now - she is attending a training camp located in a nearby country Codeforces. Fortunately, there is a special device in Codeforces that allows her to instantly teleport from Codeforces to any city of Byteforces. The way back is too long, so for the purpose of this problem teleportation is used exactly once.</p>
<p>You are to help Super M, by calculating the city in which she should teleport at the beginning in order to end her job in the minimum time (measured in krons). Also, provide her with this time so she can plan her way back to Codeforces.</p>
<p>Input<br>The first line of the input contains two integers n and m (1 ≤ m ≤ n ≤ 123456) - the number of cities in Byteforces, and the number of cities being attacked respectively.</p>
<p>Then follow n - 1 lines, describing the road system. Each line contains two city numbers ui and vi (1 ≤ ui, vi ≤ n) - the ends of the road i.</p>
<p>The last line contains m distinct integers - numbers of cities being attacked. These numbers are given in no particular order.</p>
<h5 id="Output">Output</h5><p>First print the number of the city Super M should teleport to. If there are many possible optimal answers, print the one with the lowest city number.</p>
<p>Then print the minimum possible time needed to scare all humans in cities being attacked, measured in Krons.</p>
<p>Note that the correct answer is always unique.</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Sample <span class="function"><span class="title">test</span><span class="params">(s)</span></span></span><br><span class="line"><span class="tag">input</span></span><br><span class="line"><span class="number">7</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="number">6</span></span><br><span class="line"><span class="number">3</span> <span class="number">7</span></span><br><span class="line"><span class="number">2</span> <span class="number">7</span></span><br><span class="line">output</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="tag">input</span></span><br><span class="line"><span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line">output</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>
<h5 id="Note">Note</h5><p>In the first sample, there are two possibilities to finish the Super M’s job in 3 krons. They are:<br><img src="http://codeforces.com/predownloaded/d2/93/d2937a782c97699c7ee0c44ffe9dd93b024e10ad.png" alt=""><br> and <img src="http://codeforces.com/predownloaded/8c/45/8c453032b41dfd118adc07af9c84934cd44aa1e9.png" alt=""> .</p>
<p>However, you should choose the first one as it starts in the city with the lower number.</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">Author        :CKboss</span><br><span class="line">Created Time  :2015年11月07日 星期六 16时54分08秒</span><br><span class="line">File Name     :CF592D.cpp</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">133456</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> checkpoint[maxn];</span><br><span class="line"><span class="keyword">bool</span> VIP[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Edge</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> to,next,cost;</span><br><span class="line">&#125;edge[maxn*<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Adj[maxn],Size;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(Adj,-<span class="number">1</span>,<span class="keyword">sizeof</span>(Adj)); Size=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add_Edge</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    edge[Size].to=v;</span><br><span class="line">    edge[Size].next=Adj[u];</span><br><span class="line">    edge[Size].cost=<span class="number">1</span>;</span><br><span class="line">    Adj[u]=Size++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dist[maxn];</span><br><span class="line"><span class="keyword">bool</span> inq[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> root)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">63</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    <span class="built_in">memset</span>(inq,<span class="literal">false</span>,<span class="keyword">sizeof</span>(inq));</span><br><span class="line"></span><br><span class="line">    dist[root]=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    inq[root]=<span class="literal">true</span>; q.push(root);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=q.front(); q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Adj[u];~i;i=edge[i].next)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v=edge[i].to;</span><br><span class="line">            <span class="keyword">if</span>(dist[v]&gt;dist[u]+edge[i].cost)</span><br><span class="line">            &#123;</span><br><span class="line">                dist[v]=dist[u]+edge[i].cost;</span><br><span class="line">                <span class="keyword">if</span>(!inq[v])</span><br><span class="line">                &#123;</span><br><span class="line">                    inq[v]=<span class="literal">true</span>;</span><br><span class="line">                    q.push(v);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        inq[u]=<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> PTS;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> cnt=VIP[u];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Adj[u];~i;i=edge[i].next)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=edge[i].to;</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(dfs(v,u)==<span class="literal">true</span>) cnt=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="literal">true</span>) PTS++;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line"></span><br><span class="line">    init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,x,y;i&lt;n-<span class="number">1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">        Add_Edge(x,y); Add_Edge(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,checkpoint+i);</span><br><span class="line">        VIP[checkpoint[i]]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(checkpoint,checkpoint+m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mx=checkpoint[<span class="number">0</span>];</span><br><span class="line">    spfa(mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=checkpoint[i];</span><br><span class="line">        <span class="keyword">if</span>(dist[v]&gt;dist[mx]) mx=v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    spfa(mx);</span><br><span class="line">    mx=checkpoint[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    PTS=<span class="number">0</span>;</span><br><span class="line">    dfs(mx,mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=checkpoint[i];</span><br><span class="line">        <span class="comment">/// 找距离最远的点</span></span><br><span class="line">        <span class="keyword">if</span>(dist[mx]&lt;dist[v]) mx=v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=mx;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=checkpoint[i];</span><br><span class="line">        <span class="comment">/// 找可能的直径的端点</span></span><br><span class="line">        <span class="keyword">if</span>(dist[v]==dist[mx]||dist[v]==<span class="number">0</span>) ans=min(ans,v);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,ans,(PTS-<span class="number">1</span>)*<span class="number">2</span>-dist[mx]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h5 id="题目大意:">题目大意:</h5><p>给一棵树,和树上的一些需要到达的点,你可以选择一个点为起点,沿着树到达其他需要到达的点.问所需走的最小距离是多少.</p>
<h5 id="解:">解:</h5><p>设一个最小子树T包含了所有需要到达的点,则所需要走的最小距离是T的边数和减去T的直径.T可以由树形DP求得.</p>
<h1 id="D-_Super_M"><a href="http://codeforces.com/problemset/problem/592/D">D. Super M</a></h1><p>time limit per test2 seconds<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output</p>
<p>Ari the monster is not an ordinary monster. She is the hidden identity of Super M, the Byteforces’ superhero. Byteforces is a country that consists of n cities, connected by n - 1 bidirectional roads. Every road connects exactly two distinct cities, and the whole road system is designed in a way that one is able to go from any city to any other city using only the given roads. There are m cities being attacked by humans. So Ari… we meant Super M have to immediately go to each of the cities being attacked to scare those bad humans. Super M can pass from one city to another only using the given roads. Moreover, passing through one road takes her exactly one kron - the time unit used in Byteforces.</p>
<p><img src="http://codeforces.com/predownloaded/c1/cd/c1cdef520cd33dff0147d2448dc127d9dbe51bab.png" alt=""></p>
<p>However, Super M is not on Byteforces now - she is attending a training camp located in a nearby country Codeforces. Fortunately, there is a special device in Codeforces that allows her to instantly teleport from Codeforces to any city of Byteforces. The way back is too long, so for the purpose of this problem teleportation is used exactly once.</p>
<p>You are to help Super M, by calculating the city in which she should teleport at the beginning in order to end her job in the minimum time (measured in krons). Also, provide her with this time so she can plan her way back to Codeforces.</p>
<p>Input<br>The first line of the input contains two integers n and m (1 ≤ m ≤ n ≤ 123456) - the number of cities in Byteforces, and the number of cities being attacked respectively.</p>
<p>Then follow n - 1 lines, describing the road system. Each line contains two city numbers ui and vi (1 ≤ ui, vi ≤ n) - the ends of the road i.</p>
<p>The last line contains m distinct integers - numbers of cities being attacked. These numbers are given in no particular order.</p>
<h5 id="Output">Output</h5><p>First print the number of the city Super M should teleport to. If there are many possible optimal answers, print the one with the lowest city number.</p>
<p>Then print the minimum possible time needed to scare all humans in cities being attacked, measured in Krons.</p>
<p>Note that the correct answer is always unique.</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Sample <span class="function"><span class="title">test</span><span class="params">(s)</span></span></span><br><span class="line"><span class="tag">input</span></span><br><span class="line"><span class="number">7</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span> <span class="number">6</span></span><br><span class="line"><span class="number">3</span> <span class="number">7</span></span><br><span class="line"><span class="number">2</span> <span class="number">7</span></span><br><span class="line">output</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="tag">input</span></span><br><span class="line"><span class="number">6</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span></span><br><span class="line"><span class="number">2</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line">output</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>
<h5 id="Note">Note</h5><p>In the first sample, there are two possibilities to finish the Super M’s job in 3 krons. They are:<br><img src="http://codeforces.com/predownloaded/d2/93/d2937a782c97699c7ee0c44ffe9dd93b024e10ad.png" alt=""><br> and <img src="http://codeforces.com/predownloaded/8c/45/8c453032b41dfd118adc07af9c84934cd44aa1e9.png" alt=""> .</p>
<p>However, you should choose the first one as it starts in the city with the lower number.</p>]]>
    
    </summary>
    
      <category term="dp" scheme="http://www.ckboss.cf/tags/dp/"/>
    
      <category term="树" scheme="http://www.ckboss.cf/tags/%E6%A0%91/"/>
    
      <category term="acm_dp" scheme="http://www.ckboss.cf/categories/acm-dp/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDOJ 4126 Genghis Khan the Conqueror 次小生成树]]></title>
    <link href="http://www.ckboss.cf/2015/11/07/HDOJ4126/"/>
    <id>http://www.ckboss.cf/2015/11/07/HDOJ4126/</id>
    <published>2015-11-07T04:31:50.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p><strong>次小生成树:</strong></p>
<p>次小生成树的另外一种求法,同样先求出MST,然后用树形DP求出如果切除MST上$i,j$之间的边,所形成的两个联通块之间的最短的边的值 $dp[i][j]$.</p>
<p>$dp[i][j]$可以用树形dp求得,既枚举一个树根P,对于每条边 $u \rightarrow v$ ,我们用v到P的距离来更新$dp[u][v]$的值,伪代码如下:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">dfs(P,u,fa,deepth):</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> deepth==<span class="number">1</span> :</span><br><span class="line">		ret=INF</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		ret=Edge(u,P)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> v every point connect of u :</span><br><span class="line">		<span class="keyword">if</span> v==fa:</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		<span class="keyword">else</span> :</span><br><span class="line">			ti = dfs(P,v,u,deepth+<span class="number">1</span>)</span><br><span class="line">			ret = min(ret,ti)</span><br><span class="line">			dp[u][v]=dp[v][u]=min(ti,dp[v][u])</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> ti</span><br></pre></td></tr></table></figure>
<p>如果用Prime的MST,整体的时间复杂度为:　$O(v^2)$</p>
<h1 id="Genghis_Khan_the_Conqueror">Genghis Khan the Conqueror</h1><p>Time Limit: 10000/5000 MS (Java/Others)    Memory Limit: 327680/327680 K (Java/Others)<br>Total Submission(s): 2128    Accepted Submission(s): 628</p>
<h5 id="Problem_Description">Problem Description</h5><p>Genghis Khan(成吉思汗)(1162-1227), also known by his birth name Temujin(铁木真) and temple name Taizu(元太祖), was the founder of the Mongol Empire and the greatest conqueror in Chinese history. After uniting many of the nomadic tribes on the Mongolian steppe, Genghis Khan founded a strong cavalry equipped by irony discipline, sabers and powder, and he became to the most fearsome conqueror in the history. He stretched the empire that resulted in the conquest of most of Eurasia. The following figure (origin: Wikipedia) shows the territory of Mongol Empire at that time.</p>
<p><img src="http://acm.hdu.edu.cn/data/images/4126-1.jpg" alt=""></p>
<p>Our story is about Jebei Noyan(哲别), who was one of the most famous generals in Genghis Khan’s cavalry. Once his led the advance troop to invade a country named Pushtuar. The knights rolled up all the cities in Pushtuar rapidly. As Jebei Noyan’s advance troop did not have enough soldiers, the conquest was temporary and vulnerable and he was waiting for the Genghis Khan’s reinforce. At the meantime, Jebei Noyan needed to set up many guarders on the road of the country in order to guarantee that his troop in each city can send and receive messages safely and promptly through those roads.</p>
<p>There were N cities in Pushtuar and there were bidirectional roads connecting cities. If Jebei set up guarders on a road, it was totally safe to deliver messages between the two cities connected by the road. However setting up guarders on different road took different cost based on the distance, road condition and the residual armed power nearby. Jebei had known the cost of setting up guarders on each road. He wanted to guarantee that each two cities can safely deliver messages either directly or indirectly and the total cost was minimal.</p>
<p>Things will always get a little bit harder. As a sophisticated general, Jebei predicted that there would be one uprising happening in the country sooner or later which might increase the cost (setting up guarders) on exactly ONE road. Nevertheless he did not know which road would be affected, but only got the information of some suspicious road cost changes. We assumed that the probability of each suspicious case was the same. Since that after the uprising happened, the plan of guarder setting should be rearranged to achieve the minimal cost, Jebei Noyan wanted to know the new expected minimal total cost immediately based on current information.</p>
<h5 id="Input">Input</h5><p>There are no more than 20 test cases in the input.<br>For each test case, the first line contains two integers N and M (1&lt;=N&lt;=3000, 0&lt;=M&lt;=N×N), demonstrating the number of cities and roads in Pushtuar. Cities are numbered from 0 to N-1. In the each of the following M lines, there are three integers xi, yi and ci(ci&lt;=107), showing that there is a bidirectional road between xi and yi, while the cost of setting up guarders on this road is ci. We guarantee that the graph is connected. The total cost of the graph is less or equal to 109.</p>
<p>The next line contains an integer Q (1&lt;=Q&lt;=10000) representing the number of suspicious road cost changes. In the following Q lines, each line contains three integers Xi, Yi and Ci showing that the cost of road (Xi, Yi) may change to Ci (Ci&lt;=107). We guarantee that the road always exists and Ci is larger than the original cost (we guarantee that there is at most one road connecting two cities directly). Please note that the probability of each suspicious road cost change is the same.</p>
<h5 id="Output">Output</h5><p>For each test case, output a real number demonstrating the expected minimal total cost. The result should be rounded to 4 digits after decimal point.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">6</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">6</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">6.0000</span></span><br></pre></td></tr></table></figure>
<h5 id="Hint">Hint</h5><p>The initial minimal cost is 5 by connecting city 0 to 1 and city 0 to 2. In the first suspicious case, the minimal total cost is increased to 6;<br> the second case remains 5; the third case is increased to 7. As the result, the expected cost is (5+6+7)/3 = 6.</p>
<h5 id="Source">Source</h5><p>2011 Asia Fuzhou Regional Contest</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">Author        :CKboss</span><br><span class="line">Created Time  :2015年11月07日 星期六 09时49分48秒</span><br><span class="line">File Name     :HDOJ4126.cpp</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">3030</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> onTree[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> G[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> EE</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> u,v,c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,Q;</span><br><span class="line"><span class="built_in">vector</span>&lt;EE&gt; ve;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Graph[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(onTree,<span class="literal">false</span>,<span class="keyword">sizeof</span>(onTree));</span><br><span class="line">    <span class="built_in">memset</span>(G,<span class="number">63</span>,<span class="keyword">sizeof</span>(G));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n+<span class="number">10</span>;i++) Graph[i].clear();</span><br><span class="line">    ve.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// prime</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dist[maxn];</span><br><span class="line"><span class="keyword">int</span> pre[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MST_prime</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">63</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"></span><br><span class="line">    dist[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) pre[i]=-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> _=<span class="number">0</span>;_&lt;n;_++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mark=-<span class="number">1</span>,len=INF;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]==<span class="literal">false</span>&amp;&amp;dist[i]&lt;len)</span><br><span class="line">            &#123;</span><br><span class="line">                len=dist[i]; mark=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mark==-<span class="number">1</span>) <span class="keyword">return</span> INF;</span><br><span class="line">        vis[mark]=<span class="literal">true</span>; ret+=len;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i]==<span class="literal">false</span>&amp;&amp;dist[i]&gt;G[mark][i])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[i]=G[mark][i]; pre[i]=mark;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j=pre[i];</span><br><span class="line">        <span class="keyword">if</span>(j==-<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        onTree[i][j]=onTree[j][i]=<span class="literal">true</span>;</span><br><span class="line">        Graph[i].push_back(j);</span><br><span class="line">        Graph[j].push_back(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> P,<span class="keyword">int</span> u,<span class="keyword">int</span> fa,<span class="keyword">int</span> deep)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=INF; </span><br><span class="line">    <span class="keyword">if</span>(deep!=<span class="number">1</span>) ret=G[u][P];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,sz=Graph[u].size();i&lt;sz;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> v=Graph[u][i];</span><br><span class="line">        <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> tt=dfs(P,v,u,deep+<span class="number">1</span>);</span><br><span class="line">        ret=min(ret,tt);</span><br><span class="line"></span><br><span class="line">        dp[u][v]=dp[v][u]=min(dp[u][v],tt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,u,v,c;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;c);</span><br><span class="line">            G[u][v]=G[v][u]=c;</span><br><span class="line">            ve.push_back((EE)&#123;u,v,c&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mst=MST_prime();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">63</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) dfs(i,i,-<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">double</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;Q);</span><br><span class="line">        <span class="keyword">double</span> tQ=Q;</span><br><span class="line">        <span class="keyword">while</span>(Q--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u,v,c;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;c);</span><br><span class="line">            <span class="keyword">int</span> nmst=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(onTree[u][v]==<span class="literal">false</span>) nmst+=mst;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> deta=min(dp[u][v],c)-G[u][v];</span><br><span class="line">                nmst=mst+deta;</span><br><span class="line">            &#125;</span><br><span class="line">            sum+=nmst;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.4lf\n"</span>,sum/tQ);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><strong>次小生成树:</strong></p>
<p>次小生成树的另外一种求法,同样先求出MST,然后用树形DP求出如果切除MST上$i,j$之间的边,所形成的两个联通块之间的最短的边的值 $dp[i][j]$.</p>
<p>$dp[i][j]$可以用树形dp求得,既枚举一个树根P,对于每条边 $u \rightarrow v$ ,我们用v到P的距离来更新$dp[u][v]$的值,伪代码如下:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">dfs(P,u,fa,deepth):</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> deepth==<span class="number">1</span> :</span><br><span class="line">		ret=INF</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		ret=Edge(u,P)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> v every point connect of u :</span><br><span class="line">		<span class="keyword">if</span> v==fa:</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		<span class="keyword">else</span> :</span><br><span class="line">			ti = dfs(P,v,u,deepth+<span class="number">1</span>)</span><br><span class="line">			ret = min(ret,ti)</span><br><span class="line">			dp[u][v]=dp[v][u]=min(ti,dp[v][u])</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> ti</span><br></pre></td></tr></table></figure>
<p>如果用Prime的MST,整体的时间复杂度为:　$O(v^2)$</p>
<h1 id="Genghis_Khan_the_Conqueror">Genghis Khan the Conqueror</h1><p>Time Limit: 10000/5000 MS (Java/Others)    Memory Limit: 327680/327680 K (Java/Others)<br>Total Submission(s): 2128    Accepted Submission(s): 628</p>
<h5 id="Problem_Description">Problem Description</h5><p>Genghis Khan(成吉思汗)(1162-1227), also known by his birth name Temujin(铁木真) and temple name Taizu(元太祖), was the founder of the Mongol Empire and the greatest conqueror in Chinese history. After uniting many of the nomadic tribes on the Mongolian steppe, Genghis Khan founded a strong cavalry equipped by irony discipline, sabers and powder, and he became to the most fearsome conqueror in the history. He stretched the empire that resulted in the conquest of most of Eurasia. The following figure (origin: Wikipedia) shows the territory of Mongol Empire at that time.</p>
<p><img src="http://acm.hdu.edu.cn/data/images/4126-1.jpg" alt=""></p>
<p>Our story is about Jebei Noyan(哲别), who was one of the most famous generals in Genghis Khan’s cavalry. Once his led the advance troop to invade a country named Pushtuar. The knights rolled up all the cities in Pushtuar rapidly. As Jebei Noyan’s advance troop did not have enough soldiers, the conquest was temporary and vulnerable and he was waiting for the Genghis Khan’s reinforce. At the meantime, Jebei Noyan needed to set up many guarders on the road of the country in order to guarantee that his troop in each city can send and receive messages safely and promptly through those roads.</p>
<p>There were N cities in Pushtuar and there were bidirectional roads connecting cities. If Jebei set up guarders on a road, it was totally safe to deliver messages between the two cities connected by the road. However setting up guarders on different road took different cost based on the distance, road condition and the residual armed power nearby. Jebei had known the cost of setting up guarders on each road. He wanted to guarantee that each two cities can safely deliver messages either directly or indirectly and the total cost was minimal.</p>
<p>Things will always get a little bit harder. As a sophisticated general, Jebei predicted that there would be one uprising happening in the country sooner or later which might increase the cost (setting up guarders) on exactly ONE road. Nevertheless he did not know which road would be affected, but only got the information of some suspicious road cost changes. We assumed that the probability of each suspicious case was the same. Since that after the uprising happened, the plan of guarder setting should be rearranged to achieve the minimal cost, Jebei Noyan wanted to know the new expected minimal total cost immediately based on current information.</p>
<h5 id="Input">Input</h5><p>There are no more than 20 test cases in the input.<br>For each test case, the first line contains two integers N and M (1&lt;=N&lt;=3000, 0&lt;=M&lt;=N×N), demonstrating the number of cities and roads in Pushtuar. Cities are numbered from 0 to N-1. In the each of the following M lines, there are three integers xi, yi and ci(ci&lt;=107), showing that there is a bidirectional road between xi and yi, while the cost of setting up guarders on this road is ci. We guarantee that the graph is connected. The total cost of the graph is less or equal to 109.</p>
<p>The next line contains an integer Q (1&lt;=Q&lt;=10000) representing the number of suspicious road cost changes. In the following Q lines, each line contains three integers Xi, Yi and Ci showing that the cost of road (Xi, Yi) may change to Ci (Ci&lt;=107). We guarantee that the road always exists and Ci is larger than the original cost (we guarantee that there is at most one road connecting two cities directly). Please note that the probability of each suspicious road cost change is the same.</p>
<h5 id="Output">Output</h5><p>For each test case, output a real number demonstrating the expected minimal total cost. The result should be rounded to 4 digits after decimal point.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">0</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">6</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">6</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line"><span class="number">6.0000</span></span><br></pre></td></tr></table></figure>
<h5 id="Hint">Hint</h5><p>The initial minimal cost is 5 by connecting city 0 to 1 and city 0 to 2. In the first suspicious case, the minimal total cost is increased to 6;<br> the second case remains 5; the third case is increased to 7. As the result, the expected cost is (5+6+7)/3 = 6.</p>
<h5 id="Source">Source</h5><p>2011 Asia Fuzhou Regional Contest</p>]]>
    
    </summary>
    
      <category term="次小生成树" scheme="http://www.ckboss.cf/tags/%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
      <category term="acm_图论" scheme="http://www.ckboss.cf/categories/acm-%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UVA 10600 - ACM Contest and Blackout 次小生成树Java版]]></title>
    <link href="http://www.ckboss.cf/2015/11/06/UVA10600/"/>
    <id>http://www.ckboss.cf/2015/11/06/UVA10600/</id>
    <published>2015-11-06T14:57:02.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p>求一最小生成树和一个次小生成树….<br><strong>坑: 图有重边,略麻烦一些</strong></p>
<h4 id="次小生成树求法:">次小生成树求法:</h4><p>先求出最小生成树,然后dfs预处理出在MST上从u到v路径上的最大的边长.最后枚举不在MST上的边,找到最小的差值$edge[u,v]-MaxBetween[u,v]$,次小生成树就是最小生成树加上这个差值.</p>
<embed width="100%" height="100%" name="plugin" src="http://7xjob4.com1.z0.glb.clouddn.com/88cf8b14ffc3b4adffd415e43e058681" type="application/pdf" internalinstanceid="14">

<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> maxn=<span class="number">111</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[][] G = <span class="keyword">new</span> <span class="keyword">int</span>[maxn][maxn];</span><br><span class="line">    <span class="keyword">int</span>[][] Gid = <span class="keyword">new</span> <span class="keyword">int</span>[maxn][maxn];</span><br><span class="line">    <span class="keyword">boolean</span>[][] tree = <span class="keyword">new</span> <span class="keyword">boolean</span>[maxn][maxn];</span><br><span class="line">    <span class="keyword">boolean</span>[] E_used = <span class="keyword">new</span> <span class="keyword">boolean</span>[maxn*maxn];</span><br><span class="line">    <span class="keyword">int</span>[] pre = <span class="keyword">new</span> <span class="keyword">int</span>[maxn];</span><br><span class="line">    <span class="keyword">int</span>[][] MaxBetween = <span class="keyword">new</span> <span class="keyword">int</span>[maxn][maxn];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">111</span>;i++) &#123;</span><br><span class="line">            Arrays.fill(MaxBetween[i],<span class="number">0</span>);</span><br><span class="line">            Arrays.fill(G[i],INF);</span><br><span class="line">            Arrays.fill(tree[i],<span class="keyword">false</span>);</span><br><span class="line">            G[i][i]=<span class="number">0</span>; pre[i]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.fill(E_used,<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">MST</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] dist = <span class="keyword">new</span> <span class="keyword">int</span>[maxn];</span><br><span class="line">        <span class="keyword">boolean</span>[] vis = <span class="keyword">new</span> <span class="keyword">boolean</span>[maxn];</span><br><span class="line"></span><br><span class="line">        Arrays.fill(dist,INF);</span><br><span class="line">        Arrays.fill(vis,<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        dist[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> mark=-<span class="number">1</span>,mindist=INF;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(vis[j]==<span class="keyword">false</span>&amp;&amp;dist[j]&lt;mindist) &#123;</span><br><span class="line">                    mark=j; mindist=dist[j];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(mark==-<span class="number">1</span>) <span class="keyword">return</span> INF;</span><br><span class="line"></span><br><span class="line">            sum+=mindist; vis[mark]=<span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(vis[j]==<span class="keyword">false</span>&amp;&amp;G[mark][j]&lt;dist[j]) &#123;</span><br><span class="line">                    dist[j]=G[mark][j];</span><br><span class="line">                    pre[j]=mark;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            tree[pre[i]][i]=tree[i][pre[i]]=<span class="keyword">true</span>;</span><br><span class="line">            E_used[Gid[pre[i]][i]]=<span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        tree[<span class="number">1</span>][<span class="number">1</span>]=<span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> goal,<span class="keyword">int</span> u,<span class="keyword">int</span> fa,<span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MaxBetween[goal][u]=val;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">1</span>;v&lt;=n;v++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(v==fa) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(G[u][v]&gt;=INF) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(tree[u][v]==<span class="keyword">true</span>) &#123;</span><br><span class="line">                 dfs(goal,v,u,Math.max(val,G[u][v]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PRE</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            dfs(i,i,-<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ED</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> id,u,v,c;</span><br><span class="line">        ED(<span class="keyword">int</span> _id,<span class="keyword">int</span> _u,<span class="keyword">int</span> _v,<span class="keyword">int</span> _c) &#123;</span><br><span class="line">            id=_id; u=_u; v=_v; c=_c;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"id: "</span>+id+<span class="string">" "</span>+u+<span class="string">" &lt;---&gt; "</span>+v+<span class="string">" c: "</span>+c;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Vector&lt;ED&gt; ve = <span class="keyword">new</span> Vector&lt;ED&gt;();</span><br><span class="line"></span><br><span class="line">    Main() &#123;</span><br><span class="line"></span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> T_T=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(T_T--&gt;<span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">            init();</span><br><span class="line">            ve = <span class="keyword">new</span> Vector&lt;ED&gt;();</span><br><span class="line"></span><br><span class="line">            n=in.nextInt(); m=in.nextInt();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,x,y,c;i&lt;m;i++) &#123;</span><br><span class="line">                x=in.nextInt();</span><br><span class="line">                y=in.nextInt();</span><br><span class="line">                c=in.nextInt();</span><br><span class="line"></span><br><span class="line">                ED edge = <span class="keyword">new</span> ED(i+<span class="number">1</span>,x,y,c);</span><br><span class="line">                ve.add(edge);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(G[x][y]&gt;=c) &#123;</span><br><span class="line">                    G[x][y]=G[y][x]=c;</span><br><span class="line">                    Gid[x][y]=Gid[y][x]=i+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> ans1=MST();</span><br><span class="line">            PRE();</span><br><span class="line">            <span class="keyword">int</span> deta=INF;</span><br><span class="line">            <span class="comment">/// enmu every edge not on the MST</span></span><br><span class="line">            <span class="keyword">for</span>(ED edge : ve) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(E_used[edge.id]==<span class="keyword">true</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">int</span> u=edge.u,v=edge.v,c=edge.c;</span><br><span class="line">                deta=Math.min(deta,c-MaxBetween[u][v]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(ans1+<span class="string">" "</span>+(ans1+deta));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Main();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>求一最小生成树和一个次小生成树….<br><strong>坑: 图有重边,略麻烦一些</strong></p>
<h4 id="次小生成树求法:">次小生成树求法:</h4><p>先求出最小生成树,然后dfs预处理出在MST上从u到v路径上的最大的边长.最后枚举不在MST上]]>
    </summary>
    
      <category term="次小生成树" scheme="http://www.ckboss.cf/tags/%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
      <category term="acm_图论" scheme="http://www.ckboss.cf/categories/acm-%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDOJ 4127 Flood-it! IDA*]]></title>
    <link href="http://www.ckboss.cf/2015/11/06/HDOJ4127/"/>
    <id>http://www.ckboss.cf/2015/11/06/HDOJ4127/</id>
    <published>2015-11-06T06:11:06.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<p><strong>IDA*搜索</strong><br>H()函数可以用剩下的颜色个数来表示,每次枚举需要选择的颜色即可.</p>
<p><td align="center"><h1 style="color:#1A5CC8">Flood-it!</h1><font><b><span style="font-family:Arial;font-size:12px;font-weight:bold;color:green">Time Limit: 2000/1000 MS (Java/Others)&nbsp;&nbsp;&nbsp;&nbsp;Memory Limit: 32768/32768 K (Java/Others)<br>Total Submission(s): 1672&nbsp;&nbsp;&nbsp;&nbsp;Accepted Submission(s): 387<br></span></b></font><br><br><div class="panel_title" align="left">Problem Description</div> <div class="panel_content">Flood-it is a fascinating puzzle game on Google+ platform. The game interface is like follows:<br><center><img style="max-width:100%;" src="http://acm.hdu.edu.cn/data/images/4127-1.jpg"></center> <br>At the beginning of the game, system will randomly generate an N×N square board and each grid of the board is painted by one of the six colors. The player starts from the top left corner. At each step, he/she selects a color and changes all the grids connected with the top left corner to that specific color. The statement “two grids are connected” means that there is a path between the certain two grids under condition that each pair of adjacent grids on this path is in the same color and shares an edge. In this way the player can flood areas of the board from the starting grid (top left corner) until all of the grids are in same color. The following figure shows the earliest steps of a 4×4 game (colors are labeled in 0 to 5):<br><center><img style="max-width:100%;" src="http://acm.hdu.edu.cn/data/images/4127-2.jpg"></center> <br>Given a colored board at very beginning, please find the minimal number of steps to win the game (to change all the grids into a same color). <br><br></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Input</div> <div class="panel_content">The input contains no more than 20 test cases. For each test case, the first line contains a single integer N (2&lt;=N&lt;=8) indicating the size of game board.<br><br>The following N lines show an N×N matrix (a<sub>i,j</sub>)<sub>n×n</sub> representing the game board. a<sub>i,j</sub> is in the range of 0 to 5 representing the color of the corresponding grid. <br>The input ends with N = 0.<br></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Output</div> <div class="panel_content">For each test case, output a single integer representing the minimal number of steps to win the game.<br></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Sample Input</div><div class="panel_content"><pre><div style="font-family:Courier New,Courier,monospace;">2<br>0 0<br>0 0<br>3<br>0 1 2<br>1 1 2<br>2 2 1<br>0</div></pre></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Sample Output</div><div class="panel_content"><pre><div style="font-family:Courier New,Courier,monospace;">0<br>3</div></pre></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Source</div> <div class="panel_content"> <a href="/search.php?field=problem&amp;key=2011+Asia+Fuzhou+Regional+Contest+&amp;source=1&amp;searchmode=source"> 2011 Asia Fuzhou Regional Contest  </a> </div> <div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Recommend</div> <div class="panel_content">lcy&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;We have carefully selected several similar problems for you:&nbsp;&nbsp;<a href="/showproblem.php?pid=4123" target="_blank">4123</a>&nbsp;<a href="/showproblem.php?pid=4124" target="_blank">4124</a>&nbsp;<a href="/showproblem.php?pid=4125" target="_blank">4125</a>&nbsp;<a href="/showproblem.php?pid=4126" target="_blank">4126</a>&nbsp;<a href="/showproblem.php?pid=4128" target="_blank">4128</a>&nbsp;</div><div class="panel_bottom">&nbsp;</div><br><center style="font-size:15px;font-family:Arial;font-weight:bold;color:#1A5CC8"><a href="statistic.php?pid=4127">Statistic</a>&nbsp;|&nbsp;<a href="submit.php?pid=4127">Submit</a>&nbsp;|&nbsp;<a href="./discuss/problem/list.php?problemid=4127">Discuss</a> | <a href="note/note.php?pid=4127">Note</a><br></center></td></p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">Author        :CKboss</span><br><span class="line">Created Time  :2015年11月06日 星期五 09时57分59秒</span><br><span class="line">File Name     :HDOJ4127.cpp</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> deep;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">H</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> color[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(color,<span class="literal">false</span>,<span class="keyword">sizeof</span>(color));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i][j]==<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(color[a[i][j]]==<span class="literal">false</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    color[a[i][j]]=<span class="literal">true</span>;</span><br><span class="line">                    ret++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dir_x[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,-<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dir_y[<span class="number">4</span>]=&#123;<span class="number">1</span>,-<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inSide</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">0</span>&amp;&amp;x&lt;n&amp;&amp;y&gt;=<span class="number">0</span>&amp;&amp;y&lt;n) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> c)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    vis[x][y]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> nx=x+dir_x[i];</span><br><span class="line">        <span class="keyword">int</span> ny=y+dir_y[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(inSide(nx,ny)==<span class="literal">false</span>||vis[nx][ny]==<span class="literal">false</span>||a[nx][ny]!=c) <span class="keyword">continue</span>;</span><br><span class="line">        ret++;</span><br><span class="line">        ret+=dfs2(nx,ny,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fill</span><span class="params">(<span class="keyword">int</span> c)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>; <span class="comment">// 被染色的格子数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vis[i][j]==<span class="literal">false</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                cnt+=dfs2(i,j,c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> d,<span class="keyword">int</span> deep)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(d==deep) <span class="keyword">return</span> H()==<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(d+H()&gt;deep) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> tv[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">memcpy</span>(tv,vis,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(fill(i)==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(dfs1(d+<span class="number">1</span>,deep)==<span class="literal">true</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">memcpy</span>(vis,tv,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("data2.in","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF&amp;&amp;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="literal">true</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        vis[<span class="number">0</span>][<span class="number">0</span>]=<span class="literal">false</span>; deep=<span class="number">0</span>;</span><br><span class="line">        dfs2(<span class="number">0</span>,<span class="number">0</span>,a[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(dfs1(<span class="number">0</span>,deep)==<span class="literal">false</span>) deep++;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,deep);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>IDA*搜索</strong><br>H()函数可以用剩下的颜色个数来表示,每次枚举需要选择的颜色即可.</p>
<p><td align="center"><h1 style="color:#1A5CC8">Flood-it!</h1><font><b><span style="font-family:Arial;font-size:12px;font-weight:bold;color:green">Time Limit: 2000/1000 MS (Java/Others)&nbsp;&nbsp;&nbsp;&nbsp;Memory Limit: 32768/32768 K (Java/Others)<br>Total Submission(s): 1672&nbsp;&nbsp;&nbsp;&nbsp;Accepted Submission(s): 387<br></span></b></font><br><br><div class="panel_title" align="left">Problem Description</div> <div class="panel_content">Flood-it is a fascinating puzzle game on Google+ platform. The game interface is like follows:<br><center><img style="max-width:100%;" src="http://acm.hdu.edu.cn/data/images/4127-1.jpg"></center> <br>At the beginning of the game, system will randomly generate an N×N square board and each grid of the board is painted by one of the six colors. The player starts from the top left corner. At each step, he/she selects a color and changes all the grids connected with the top left corner to that specific color. The statement “two grids are connected” means that there is a path between the certain two grids under condition that each pair of adjacent grids on this path is in the same color and shares an edge. In this way the player can flood areas of the board from the starting grid (top left corner) until all of the grids are in same color. The following figure shows the earliest steps of a 4×4 game (colors are labeled in 0 to 5):<br><center><img style="max-width:100%;" src="http://acm.hdu.edu.cn/data/images/4127-2.jpg"></center> <br>Given a colored board at very beginning, please find the minimal number of steps to win the game (to change all the grids into a same color). <br><br></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Input</div> <div class="panel_content">The input contains no more than 20 test cases. For each test case, the first line contains a single integer N (2&lt;=N&lt;=8) indicating the size of game board.<br><br>The following N lines show an N×N matrix (a<sub>i,j</sub>)<sub>n×n</sub> representing the game board. a<sub>i,j</sub> is in the range of 0 to 5 representing the color of the corresponding grid. <br>The input ends with N = 0.<br></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Output</div> <div class="panel_content">For each test case, output a single integer representing the minimal number of steps to win the game.<br></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Sample Input</div><div class="panel_content"><pre><div style="font-family:Courier New,Courier,monospace;">2<br>0 0<br>0 0<br>3<br>0 1 2<br>1 1 2<br>2 2 1<br>0</div></pre></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Sample Output</div><div class="panel_content"><pre><div style="font-family:Courier New,Courier,monospace;">0<br>3</div></pre></div><div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Source</div> <div class="panel_content"> <a href="/search.php?field=problem&amp;key=2011+Asia+Fuzhou+Regional+Contest+&amp;source=1&amp;searchmode=source"> 2011 Asia Fuzhou Regional Contest  </a> </div> <div class="panel_bottom">&nbsp;</div><br><div class="panel_title" align="left">Recommend</div> <div class="panel_content">lcy&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;We have carefully selected several similar problems for you:&nbsp;&nbsp;<a href="/showproblem.php?pid=4123" target="_blank">4123</a>&nbsp;<a href="/showproblem.php?pid=4124" target="_blank">4124</a>&nbsp;<a href="/showproblem.php?pid=4125" target="_blank">4125</a>&nbsp;<a href="/showproblem.php?pid=4126" target="_blank">4126</a>&nbsp;<a href="/showproblem.php?pid=4128" target="_blank">4128</a>&nbsp;</div><div class="panel_bottom">&nbsp;</div><br><center style="font-size:15px;font-family:Arial;font-weight:bold;color:#1A5CC8"><a href="statistic.php?pid=4127">Statistic</a>&nbsp;|&nbsp;<a href="submit.php?pid=4127">Submit</a>&nbsp;|&nbsp;<a href="./discuss/problem/list.php?problemid=4127">Discuss</a> | <a href="note/note.php?pid=4127">Note</a><br></center></td></tr></p>]]>
    
    </summary>
    
      <category term="IDA*" scheme="http://www.ckboss.cf/tags/IDA/"/>
    
      <category term="acm_搜索" scheme="http://www.ckboss.cf/categories/acm-%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HDOJ 4163 Stock Prices 排序]]></title>
    <link href="http://www.ckboss.cf/2015/11/05/HDOJ4163/"/>
    <id>http://www.ckboss.cf/2015/11/05/HDOJ4163/</id>
    <published>2015-11-05T13:22:56.000Z</published>
    <updated>2016-05-14T14:28:24.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Stock_Prices"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4163" target="_blank" rel="external">Stock Prices</a></h1><p>Time Limit: 10000/5000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)<br>Total Submission(s): 1026    Accepted Submission(s): 420</p>
<h5 id="Problem_Description">Problem Description</h5><p>Buy low, sell high. That is what one should do to make profit in the stock market (we will ignore short selling here). Of course, no one can tell the price of a stock in the future, so it is difficult to know exactly when to buy and sell and how much profit one can make by repeatedly buying and selling a stock.</p>
<p>But if you do have the history of price of a stock for the last n days, it is certainly possible to determine the maximum profit that could have been made. Instead, we are interested in finding the k1 lowest prices and k2 highest prices in the history.</p>
<h5 id="Input">Input</h5><p>The input consists of a number of cases. The first line of each case starts with positive integers n, k1, and k2 on a line (n &lt;= 1,000,000, k1 + k2 &lt;= n, k1, k2 &lt;= 100). The next line contains integers giving the prices of a stock in the last n days: the i-th integer (1 &lt;= i &lt;= n) gives the stock price on day i. The stock prices are non-negative. The input is terminated by n = k1 = k2 = 0, and that case should not be processed.</p>
<h5 id="Output">Output</h5><p>For each case, produce three lines of output. The first line contains the case number (starting from 1) on one line. The second line specifies the days on which the k1 lowest stock prices occur. The days are sorted in ascending order. The third line specifies the days on which the k2 highest stock prices occur, and the days sorted in descending order. The entries in each list should be separated by a single space. If there are multiple correct lists for the lowest prices, choose the lexicographically smallest list. If there are multiple correct lists for the highest prices, choose the lexicographically largest list.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">10</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">10</span> <span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line">Case <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">10</span> <span class="number">9</span></span><br><span class="line">Case <span class="number">2</span></span><br><span class="line"><span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="Source">Source</h5><p>The 2011 Rocky Mountain Regional Contest</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ***********************************************</span><br><span class="line">Author        :CKboss</span><br><span class="line">Created Time  :2015年11月05日 星期四 20时04分02秒</span><br><span class="line">File Name     :HDOJ4263.cpp</span><br><span class="line">************************************************ */</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> STK</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> val,id;</span><br><span class="line">&#125;Stk[<span class="number">1001000</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,k1,k2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(STK a,STK b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.val!=b.val) <span class="keyword">return</span> a.val&lt;b.val;</span><br><span class="line">    <span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(STK a,STK b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(STK a,STK b)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.id&gt;b.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line">    <span class="comment">//freopen("out.txt","w",stdout);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cas=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;k1,&amp;k2)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;k1==<span class="number">0</span>&amp;&amp;k2==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,x;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            Stk[i].val=x; Stk[i].id=i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d\n"</span>,cas++);</span><br><span class="line"></span><br><span class="line">        sort(Stk,Stk+n,cmp);</span><br><span class="line">        sort(Stk,Stk+k1,cmp1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k1;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d%c"</span>,Stk[i].id,(i==k1-<span class="number">1</span>)?<span class="number">10</span>:<span class="number">32</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sort(Stk+n-k2,Stk+n,cmp2);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=k2-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d%c"</span>,Stk[n-<span class="number">1</span>-i].id,(i==<span class="number">0</span>)?<span class="number">10</span>:<span class="number">32</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Stock_Prices"><a href="http://acm.hdu.edu.cn/showproblem.php?pid=4163">Stock Prices</a></h1><p>Time Limit: 10000/5000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)<br>Total Submission(s): 1026    Accepted Submission(s): 420</p>
<h5 id="Problem_Description">Problem Description</h5><p>Buy low, sell high. That is what one should do to make profit in the stock market (we will ignore short selling here). Of course, no one can tell the price of a stock in the future, so it is difficult to know exactly when to buy and sell and how much profit one can make by repeatedly buying and selling a stock.</p>
<p>But if you do have the history of price of a stock for the last n days, it is certainly possible to determine the maximum profit that could have been made. Instead, we are interested in finding the k1 lowest prices and k2 highest prices in the history.</p>
<h5 id="Input">Input</h5><p>The input consists of a number of cases. The first line of each case starts with positive integers n, k1, and k2 on a line (n &lt;= 1,000,000, k1 + k2 &lt;= n, k1, k2 &lt;= 100). The next line contains integers giving the prices of a stock in the last n days: the i-th integer (1 &lt;= i &lt;= n) gives the stock price on day i. The stock prices are non-negative. The input is terminated by n = k1 = k2 = 0, and that case should not be processed.</p>
<h5 id="Output">Output</h5><p>For each case, produce three lines of output. The first line contains the case number (starting from 1) on one line. The second line specifies the days on which the k1 lowest stock prices occur. The days are sorted in ascending order. The third line specifies the days on which the k2 highest stock prices occur, and the days sorted in descending order. The entries in each list should be separated by a single space. If there are multiple correct lists for the lowest prices, choose the lexicographically smallest list. If there are multiple correct lists for the highest prices, choose the lexicographically largest list.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sample Input</span><br><span class="line"><span class="number">10</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">10</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"><span class="number">10</span> <span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Sample Output</span><br><span class="line">Case <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">10</span> <span class="number">9</span></span><br><span class="line">Case <span class="number">2</span></span><br><span class="line"><span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="Source">Source</h5><p>The 2011 Rocky Mountain Regional Contest</p>]]>
    
    </summary>
    
      <category term="排序" scheme="http://www.ckboss.cf/tags/%E6%8E%92%E5%BA%8F/"/>
    
      <category term="acm_水" scheme="http://www.ckboss.cf/categories/acm-%E6%B0%B4/"/>
    
  </entry>
  
</feed>
